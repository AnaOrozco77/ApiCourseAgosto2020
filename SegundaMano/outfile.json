{
  "collection": {
    "_": {
      "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
    },
    "item": [
      {
        "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
        "name": "Ver Categorias",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1",
              "public",
              "categories",
              "insert"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.*"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                "//console.log(\"Respuesta JSON: \", jsonData)\r",
                "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                "\r",
                "//pm.test(\"Check: \", function() {\r",
                "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                "//})\r",
                "\r",
                "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                "})\r",
                "\r",
                "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                "})\r",
                "\r",
                "\r",
                "\r",
                "//////////////////////////////////////////////////////////////////////////////////////////\r",
                "\r",
                "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                "})\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
            }
          }
        ]
      },
      {
        "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
        "name": "Ver Categorias v1.1",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "public",
              "categories",
              "filter"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.+"
            },
            {
              "key": "lang",
              "value": "es"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "\r",
                "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                "\r",
                "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                "})\r",
                "\r",
                "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                "})\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
            }
          }
        ]
      },
      {
        "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
        "name": "Ver Regiones",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "public",
              "regions"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "depth",
              "value": "1"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "\r",
                "\r",
                "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                "})\r",
                "\r",
                "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                "})\r",
                "\r",
                "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                "})\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
            }
          }
        ]
      },
      {
        "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
        "name": "Crear Cuenta",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.*"
            },
            {
              "key": "Authorization",
              "value": "Basic {{base64}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
              "type": "text/javascript",
              "exec": [
                "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                "//Imprimir en consola\r",
                "console.log(\"Valor correo\", numrandom)\r",
                "// Creamos una variable llamada email para formar un correo electronoco\r",
                "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                "\r",
                "//Seteamos una variable de ambiente donde guardamos el correo\r",
                "pm.environment.set(\"email\", email)\r",
                "// Mostramos en consola el correo\r",
                "console.log(\"email\", email);\r",
                "\r",
                "// Creamos una variable para concatenar\r",
                "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                "\r",
                "// Encodeamos en base 64 lo concatenado anteriormente\r",
                "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                "// Mostramos en cosola lo encodead\r",
                "console.log(\"Encode: \", encoded)\r",
                "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                "pm.environment.set(\"base64\", encoded)\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "\r",
                "pm.test(\"Validar Estatus 401\", function() {\r",
                "    pm.response.to.have.status(401)\r",
                "})\r",
                "\r",
                "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                "pm.test(\"Probar Response No Vacio\", function(){\r",
                "        pm.response.to.be.withBody;\r",
                "        });\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                "//\t});\r",
                "\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header Content-Type\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                "\r",
                "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                "//})\r",
                ""
              ],
              "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
            }
          }
        ]
      },
      {
        "id": "99b34d25-860c-4896-b804-abb2f2939074",
        "name": "Modificar Usuario/Cuenta",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1",
              "private",
              "accounts",
              "10795154"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Authorization",
              "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
            },
            {
              "key": "Accept-Language",
              "value": "es"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
              "type": "text/javascript",
              "exec": [
                "//var email = pm.environment.get('correoValido')\r",
                "let email = \"v070595@hotmail.com\";\r",
                "//console.log(\"Email: \", email);\r",
                "var pass = pm.environment.get('passValido')\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "pm.sendRequest({\r",
                "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                "    method: 'POST',\r",
                "    header: 'Authorization: Basic ' + encodeKeys,\r",
                "}, function(err, res){\r",
                "    //console.log(\"Res SendRequest: \",res )\r",
                "    var jsonResponse = res.json()\r",
                "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                "});\r",
                "\r",
                "var token = pm.environment.get('access_token')\r",
                "console.log(\"Token: \", token)\r",
                "//var uuid = pm.environment.get('uuid')\r",
                "//var token_uuid = token\r",
                "//console.log(\"Token and uuid: \", token, uuid)\r",
                "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                "console.log(\"Token_Modificar: \", tokenMod)\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header Content-Type\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
            }
          }
        ]
      },
      {
        "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
        "name": "Request No Auth",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "\r",
                "pm.test(\"Validar Estatus 400\", function() {\r",
                "    pm.response.to.have.status(400)\r",
                "})\r",
                "\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                "})\r",
                ""
              ],
              "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
            }
          }
        ]
      },
      {
        "id": "297a652c-b350-49cd-95f7-b575ac74973e",
        "name": "Crear Token",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic {{Base64}}"
            }
          ],
          "method": "POST"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
              "type": "text/javascript",
              "exec": [
                "var emailValid = pm.environment.get(\"emailValido\")\r",
                "var passValid = pm.environment.get(\"passValido\")\r",
                "console.log(emailValid, passValid)\r",
                "\r",
                "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                "\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json()\r",
                "//console.log(\"access_token\", jsonData.access_token)\r",
                "\r",
                "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                "\r",
                "//console.log(\"access_token: \", jsonData.access_token)\r",
                "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                "\r",
                "// Ejemplo de Split:\r",
                "//let messageString = pm.response.json().message\r",
                "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                "\r",
                "\r",
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "\r",
                "\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
            }
          }
        ]
      },
      {
        "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
        "name": "Crear Anuncio",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "accounts",
              "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
              "up"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic {{Token_uuid_Atoken}}"
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
              "type": "text/javascript",
              "exec": [
                "//var email = pm.environment.get('correoValido')\r",
                "let email = \"v070595@hotmail.com\";\r",
                "//console.log(\"Email: \", email);\r",
                "var pass = pm.environment.get('passValido')\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "pm.sendRequest({\r",
                "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                "    method: 'POST',\r",
                "    header: 'Authorization: Basic ' + encodeKeys,\r",
                "}, function(err, res){\r",
                "    //console.log(\"Res SendRequest: \",res )\r",
                "    var jsonResponse = res.json()\r",
                "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                "});\r",
                "\r",
                "var token = pm.environment.get('access_token')\r",
                "var uuid = pm.environment.get('uuid')\r",
                "//var token_uuid = token\r",
                "console.log(\"Token and uuid: \", token, uuid)\r",
                "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                "\r",
                "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                ""
              ],
              "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar RespuestanJSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                "    pm.response.to.not.be.empty;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                "    pm.response.to.have.header(\"Content-Type\"); \r",
                "});"
              ],
              "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
            }
          }
        ]
      },
      {
        "id": "e5b01055-552d-4860-8f3e-86877f71658f",
        "name": "Crear Direccion",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "create"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic {{Token_uuid_Atoken}}"
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "disabled": true,
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "contact",
                "value": "Arya Stark"
              },
              {
                "key": "phone",
                "value": "5553768724"
              },
              {
                "key": "rfc",
                "value": "ASTT821103"
              },
              {
                "key": "zipCode",
                "value": "76543"
              },
              {
                "key": "exteriorInfo",
                "value": "Lop%C3%A9z%20Mateos%204213"
              },
              {
                "key": "interiorInfo",
                "value": "1"
              },
              {
                "key": "region",
                "value": "10"
              },
              {
                "key": "municipality",
                "value": "224"
              },
              {
                "key": "area",
                "value": "5666"
              },
              {
                "key": "alias",
                "value": "Mi direccion"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66780380-a7e6-4d77-890a-373af0bb4510",
              "type": "text/javascript",
              "exec": [
                "//var email = pm.environment.get('correoValido')\r",
                "let email = \"v070595@hotmail.com\";\r",
                "//console.log(\"Email: \", email);\r",
                "var pass = pm.environment.get('passValido')\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "pm.sendRequest({\r",
                "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                "    method: 'POST',\r",
                "    header: 'Authorization: Basic ' + encodeKeys,\r",
                "}, function(err, res){\r",
                "    //console.log(\"Res SendRequest: \",res )\r",
                "    var jsonResponse = res.json()\r",
                "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                "});\r",
                "\r",
                "var token = pm.environment.get('access_token')\r",
                "var uuid = pm.environment.get('uuid')\r",
                "//var token_uuid = token\r",
                "console.log(\"Token and uuid: \", token, uuid)\r",
                "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                "\r",
                "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 201\", function() {\r",
                "    pm.response.to.have.status(201)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                ""
              ],
              "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
            }
          }
        ]
      },
      {
        "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
        "name": "Ver Mis Direcciones",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "get"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [
              {
                "disabled": true,
                "key": "depth",
                "value": "1^"
              },
              {
                "disabled": true,
                "key": "from",
                "value": "region:4^"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "Authorization",
              "value": "Basic {{Token_uuid_Atoken}}"
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
              "type": "text/javascript",
              "exec": [
                "//var email = pm.environment.get('correoValido')\r",
                "let email = \"v070595@hotmail.com\";\r",
                "//console.log(\"Email: \", email);\r",
                "var pass = pm.environment.get('passValido')\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "pm.sendRequest({\r",
                "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                "    method: 'POST',\r",
                "    header: 'Authorization: Basic ' + encodeKeys,\r",
                "}, function(err, res){\r",
                "    //console.log(\"Res SendRequest: \",res )\r",
                "    var jsonResponse = res.json()\r",
                "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                "});\r",
                "\r",
                "var token = pm.environment.get('access_token')\r",
                "var uuid = pm.environment.get('uuid')\r",
                "//var token_uuid = token\r",
                "console.log(\"Token and uuid: \", token, uuid)\r",
                "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                "\r",
                "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "\r",
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
            }
          }
        ]
      },
      {
        "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
        "name": "Borrar Direccion",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "delete",
              "{{addressID_env}}"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic {{Token_uuid_Atoken}}"
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "disabled": true,
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            }
          ],
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66780380-a7e6-4d77-890a-373af0bb4510",
              "type": "text/javascript",
              "exec": [
                "//var email = pm.environment.get('correoValido')\r",
                "let email = \"v070595@hotmail.com\";\r",
                "//console.log(\"Email: \", email);\r",
                "var pass = pm.environment.get('passValido')\r",
                "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                "pm.environment.set(\"Base64\",encodeKeys)\r",
                "\r",
                "pm.sendRequest({\r",
                "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                "    method: 'POST',\r",
                "    header: 'Authorization: Basic ' + encodeKeys,\r",
                "}, function(err, res){\r",
                "    //console.log(\"Res SendRequest: \",res )\r",
                "    var jsonResponse = res.json()\r",
                "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                "});\r",
                "\r",
                "var token = pm.environment.get('access_token')\r",
                "var uuid = pm.environment.get('uuid')\r",
                "//var token_uuid = token\r",
                "console.log(\"Token and uuid: \", token, uuid)\r",
                "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                "\r",
                "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.response.to.have.status(200)\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta JSON\", function() {\r",
                "    pm.response.to.be.json;\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                "})\r",
                "\r",
                "\r",
                "//var jsonData = pm.response.json();\r",
                "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                "\r",
                "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                "})\r",
                ""
              ],
              "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
            }
          }
        ]
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
      "name": "PracticaSM",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "fb2e09e9-46f0-402d-8978-ac324d185e31",
    "values": [
      {
        "type": "any",
        "value": "agenteo5u455v5x9c@mailinator.com",
        "key": "email"
      },
      {
        "type": "any",
        "value": "YWdlbnRlbzV1NDU1djV4OWNAbWFpbGluYXRvci5jb206dW5kZWZpbmVk",
        "key": "base64"
      },
      {
        "type": "any",
        "value": "djA3MDU5NUBob3RtYWlsLmNvbTp1bmRlZmluZWQ=",
        "key": "Base64"
      },
      {
        "type": "any",
        "value": "tag:scmcoord.com,2013:api undefined",
        "key": "Token_Modificar"
      },
      {
        "type": "any",
        "value": null,
        "key": "access_token"
      },
      {
        "type": "any",
        "value": "dW5kZWZpbmVkOm51bGw=",
        "key": "Token_uuid_Atoken"
      },
      {
        "type": "any",
        "value": null,
        "key": "addressID_env"
      }
    ]
  },
  "globals": {
    "id": "f68ef558-c504-4198-bf5d-1da9a3e71518",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 6
      },
      "prerequests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 16,
        "pending": 0,
        "failed": 6
      },
      "tests": {
        "total": 11,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 29,
        "pending": 0,
        "failed": 13
      },
      "testScripts": {
        "total": 11,
        "pending": 0,
        "failed": 6
      },
      "prerequestScripts": {
        "total": 7,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 312.1875,
      "responseMin": 113,
      "responseMax": 877,
      "responseSd": 298.4259858162769,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1598082402355,
      "completed": 1598082407651
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cad24c0-8847-444d-b336-be1ff4606eed",
          "httpRequestId": "fe7160c8-a1ab-4fbd-b555-affc226c2251"
        },
        "item": {
          "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
          "name": "Ver Categorias",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "public",
                "categories",
                "insert"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                  "//console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                  "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                  "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                  "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                  "\r",
                  "//pm.test(\"Check: \", function() {\r",
                  "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                  "//})\r",
                  "\r",
                  "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                  "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "\r",
                  "\r",
                  "//////////////////////////////////////////////////////////////////////////////////////////\r",
                  "\r",
                  "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1",
              "public",
              "categories",
              "insert"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ab834a6-2921-4905-a709-5353ad363725",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Validar Respuesta en JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validar Respuesta en JSON",
              "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
              "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "b3c065fa-a3a8-4b79-b4a4-89b8bd8d9e64",
              "timestamp": 1598082402448,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b57b259b-8d60-4226-848b-b9d74d87c70d",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "646d1760-d875-4301-ba7e-b470437f4953"
        },
        "item": {
          "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
          "name": "Ver Categorias v1.1",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "categories",
                "filter"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.+"
              },
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "public",
              "categories",
              "filter"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.+"
            },
            {
              "key": "lang",
              "value": "es"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7226ea3c-1fff-4162-8642-30f85df6ef91",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          },
          {
            "assertion": "Validar Respuesta en JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validar Respuesta en JSON",
              "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
              "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "08305de8-e8c5-470d-a9ee-ccff97626c7c",
              "timestamp": 1598082402481,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "22c68db0-1144-48a7-8f9f-017c49930515",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd548b7b-7265-4b54-8642-eea776261eaa"
        },
        "item": {
          "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
          "name": "Ver Regiones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "regions"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                },
                {
                  "key": "depth",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "public",
              "regions"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "depth",
              "value": "1"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5f3eb3c3-c01d-47b8-8cde-fcb2c76f8889",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Validar Respuesta en JSON",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validar Respuesta en JSON",
              "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
              "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "6982bb2b-868e-4812-bb3b-896709322129",
              "timestamp": 1598082402509,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "c67f6911-15bf-4ed3-889b-4af6c9e3db63",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29151905-aa57-4118-874c-d089ab416d18"
        },
        "item": {
          "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
          "name": "Crear Cuenta",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              },
              {
                "key": "Authorization",
                "value": "Basic {{base64}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                "type": "text/javascript",
                "exec": [
                  "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                  "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                  "//Imprimir en consola\r",
                  "console.log(\"Valor correo\", numrandom)\r",
                  "// Creamos una variable llamada email para formar un correo electronoco\r",
                  "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                  "\r",
                  "//Seteamos una variable de ambiente donde guardamos el correo\r",
                  "pm.environment.set(\"email\", email)\r",
                  "// Mostramos en consola el correo\r",
                  "console.log(\"email\", email);\r",
                  "\r",
                  "// Creamos una variable para concatenar\r",
                  "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                  "\r",
                  "// Encodeamos en base 64 lo concatenado anteriormente\r",
                  "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                  "// Mostramos en cosola lo encodead\r",
                  "console.log(\"Encode: \", encoded)\r",
                  "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                  "pm.environment.set(\"base64\", encoded)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 401\", function() {\r",
                  "    pm.response.to.have.status(401)\r",
                  "})\r",
                  "\r",
                  "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                  "pm.test(\"Probar Response No Vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "//\t});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                  "\r",
                  "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                  "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                  "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                  "//})\r",
                  ""
                ],
                "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain,*.*"
            },
            {
              "key": "Authorization",
              "value": "Basic YWdlbnRlbzV1NDU1djV4OWNAbWFpbGluYXRvci5jb206dW5kZWZpbmVk"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "38e6f7a9-f653-4bc1-a4fb-a47855d7cb3b",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"account\":{\"email\":\"agenteo5u455v5x9c@mailinator.com\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "aa025925-d254-492b-b7aa-ad4a02ec20b1",
              "timestamp": 1598082402551,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0d74b86-c997-4d0f-8e67-7138df647878",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "155fe3ea-1edb-420b-8091-22f9319c7b06"
        },
        "item": {
          "id": "99b34d25-860c-4896-b804-abb2f2939074",
          "name": "Modificar Usuario/Cuenta",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "private",
                "accounts",
                "10795154"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Authorization",
                "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
              },
              {
                "key": "Accept-Language",
                "value": "es"
              },
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "console.log(\"Token: \", token)\r",
                  "//var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "//console.log(\"Token and uuid: \", token, uuid)\r",
                  "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                  "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                  "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                  "console.log(\"Token_Modificar: \", tokenMod)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1",
              "private",
              "accounts",
              "10795154"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Authorization",
              "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
            },
            {
              "key": "Accept-Language",
              "value": "es"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eb0e6f60-e483-4656-9fb6-f686b6b4f347",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 369,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
          }
        },
        "response": {
          "id": "dae7c660-e2b3-498c-82b4-e847a7782e0a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:44 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "X-SCM-API-Version",
              "value": "1"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              47,
              112,
              114,
              105,
              118,
              97,
              116,
              101,
              47,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              115,
              47,
              49,
              48,
              55,
              57,
              53,
              49,
              53,
              52,
              34,
              44,
              34,
              99,
              97,
              110,
              95,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              118,
              48,
              55,
              48,
              53,
              57,
              53,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              34,
              44,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              114,
              101,
              103,
              105,
              111,
              110,
              34,
              44,
              34,
              108,
              97,
              98,
              101,
              108,
              34,
              58,
              34,
              66,
              97,
              106,
              97,
              32,
              67,
              97,
              108,
              105,
              102,
              111,
              114,
              110,
              105,
              97,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              55,
              34,
              44,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              109,
              117,
              110,
              105,
              99,
              105,
              112,
              97,
              108,
              105,
              116,
              121,
              34,
              44,
              34,
              108,
              97,
              98,
              101,
              108,
              34,
              58,
              34,
              77,
              101,
              120,
              105,
              99,
              97,
              108,
              105,
              34,
              125,
              93,
              125,
              93,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              110,
              97,
              32,
              77,
              101,
              110,
              100,
              111,
              122,
              97,
              48,
              49,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              54,
              50,
              50,
              50,
              50,
              50,
              55,
              56,
              49,
              48,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              95,
              104,
              105,
              100,
              100,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              111,
              102,
              101,
              115,
              115,
              105,
              111,
              110,
              97,
              108,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              114,
              102,
              99,
              34,
              58,
              34,
              34,
              44,
              34,
              117,
              117,
              105,
              100,
              34,
              58,
              34,
              99,
              51,
              99,
              56,
              102,
              99,
              100,
              56,
              45,
              54,
              49,
              54,
              50,
              45,
              52,
              102,
              102,
              48,
              45,
              56,
              48,
              98,
              49,
              45,
              56,
              102,
              102,
              53,
              99,
              97,
              53,
              54,
              55,
              49,
              98,
              101,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 877,
          "responseSize": 381
        },
        "id": "99b34d25-860c-4896-b804-abb2f2939074",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header Content-Type",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0d74b86-c997-4d0f-8e67-7138df647878",
          "length": 11,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "155fe3ea-1edb-420b-8091-22f9319c7b06"
        },
        "item": {
          "id": "99b34d25-860c-4896-b804-abb2f2939074",
          "name": "Modificar Usuario/Cuenta",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "private",
                "accounts",
                "10795154"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Authorization",
                "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
              },
              {
                "key": "Accept-Language",
                "value": "es"
              },
              {
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "console.log(\"Token: \", token)\r",
                  "//var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "//console.log(\"Token and uuid: \", token, uuid)\r",
                  "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                  "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                  "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                  "console.log(\"Token_Modificar: \", tokenMod)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1",
              "private",
              "accounts",
              "10795154"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Authorization",
              "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
            },
            {
              "key": "Accept-Language",
              "value": "es"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "eb0e6f60-e483-4656-9fb6-f686b6b4f347",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 369,
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
          }
        },
        "response": {
          "id": "dae7c660-e2b3-498c-82b4-e847a7782e0a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:44 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "X-SCM-API-Version",
              "value": "1"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              123,
              34,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              95,
              105,
              100,
              34,
              58,
              34,
              47,
              112,
              114,
              105,
              118,
              97,
              116,
              101,
              47,
              97,
              99,
              99,
              111,
              117,
              110,
              116,
              115,
              47,
              49,
              48,
              55,
              57,
              53,
              49,
              53,
              52,
              34,
              44,
              34,
              99,
              97,
              110,
              95,
              112,
              117,
              98,
              108,
              105,
              115,
              104,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              118,
              48,
              55,
              48,
              53,
              57,
              53,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              34,
              44,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              114,
              101,
              103,
              105,
              111,
              110,
              34,
              44,
              34,
              108,
              97,
              98,
              101,
              108,
              34,
              58,
              34,
              66,
              97,
              106,
              97,
              32,
              67,
              97,
              108,
              105,
              102,
              111,
              114,
              110,
              105,
              97,
              34,
              44,
              34,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              34,
              52,
              55,
              34,
              44,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              109,
              117,
              110,
              105,
              99,
              105,
              112,
              97,
              108,
              105,
              116,
              121,
              34,
              44,
              34,
              108,
              97,
              98,
              101,
              108,
              34,
              58,
              34,
              77,
              101,
              120,
              105,
              99,
              97,
              108,
              105,
              34,
              125,
              93,
              125,
              93,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              110,
              97,
              32,
              77,
              101,
              110,
              100,
              111,
              122,
              97,
              48,
              49,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              34,
              58,
              34,
              54,
              50,
              50,
              50,
              50,
              50,
              55,
              56,
              49,
              48,
              34,
              44,
              34,
              112,
              104,
              111,
              110,
              101,
              95,
              104,
              105,
              100,
              100,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              112,
              114,
              111,
              102,
              101,
              115,
              115,
              105,
              111,
              110,
              97,
              108,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              114,
              102,
              99,
              34,
              58,
              34,
              34,
              44,
              34,
              117,
              117,
              105,
              100,
              34,
              58,
              34,
              99,
              51,
              99,
              56,
              102,
              99,
              100,
              56,
              45,
              54,
              49,
              54,
              50,
              45,
              52,
              102,
              102,
              48,
              45,
              56,
              48,
              98,
              49,
              45,
              56,
              102,
              102,
              53,
              99,
              97,
              53,
              54,
              55,
              49,
              98,
              101,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 877,
          "responseSize": 381
        },
        "id": "99b34d25-860c-4896-b804-abb2f2939074",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header Content-Type",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "44691043-105f-4efe-93c5-d1e4cf27f48a",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec7c1d86-8795-479e-b65a-1affc871c1a0"
        },
        "item": {
          "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
          "name": "Request No Auth",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 400\", function() {\r",
                  "    pm.response.to.have.status(400)\r",
                  "})\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                  "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                  "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "52bb4cf0-4511-419f-bd62-400e0cf0c0e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST"
        },
        "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "d2953319-0a45-4da1-9ce6-30c35900229d",
              "timestamp": 1598082404263,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "31230f6b-d750-45d1-aeba-c9872b94e9f4",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "833e2679-8ba1-41db-a94e-016d1413aa00"
        },
        "item": {
          "id": "297a652c-b350-49cd-95f7-b575ac74973e",
          "name": "Crear Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Base64}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                "type": "text/javascript",
                "exec": [
                  "var emailValid = pm.environment.get(\"emailValido\")\r",
                  "var passValid = pm.environment.get(\"passValido\")\r",
                  "console.log(emailValid, passValid)\r",
                  "\r",
                  "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                  "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                  "\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json()\r",
                  "//console.log(\"access_token\", jsonData.access_token)\r",
                  "\r",
                  "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                  "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                  "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                  "\r",
                  "//console.log(\"access_token: \", jsonData.access_token)\r",
                  "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                  "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                  "\r",
                  "// Ejemplo de Split:\r",
                  "//let messageString = pm.response.json().message\r",
                  "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "nga",
              "api",
              "v1.1",
              "private",
              "accounts"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOnVuZGVmaW5lZA=="
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d766e953-78bc-4eb8-8c62-606699d0bf23",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST"
        },
        "id": "297a652c-b350-49cd-95f7-b575ac74973e",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "4cc4c518-852a-491d-9cc5-6ef947480227",
              "timestamp": 1598082404314,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cda7628e-f297-49b1-a124-db56ce8563a4",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "56cb82c0-efd1-4b64-bbb7-81c383bbe1bf"
        },
        "item": {
          "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
          "name": "Crear Anuncio",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "accounts",
                "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                "up"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  ""
                ],
                "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar RespuestanJSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                  "    pm.response.to.not.be.empty;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                  "    pm.response.to.have.header(\"Content-Type\"); \r",
                  "});"
                ],
                "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "accounts",
              "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
              "up"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1da274b-0fc2-4b9b-ae14-15380e7b7b4d",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 275,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "107dab3c-b50b-43a2-98a0-5197534e9ae8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:45 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "24"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              85,
              78,
              65,
              85,
              84,
              72,
              79,
              82,
              73,
              90,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 113,
          "responseSize": 24
        },
        "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Validar RespuestanJSON",
            "skipped": false
          },
          {
            "assertion": "Validar 'Body' No Vacio",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cda7628e-f297-49b1-a124-db56ce8563a4",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "56cb82c0-efd1-4b64-bbb7-81c383bbe1bf"
        },
        "item": {
          "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
          "name": "Crear Anuncio",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "accounts",
                "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                "up"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  ""
                ],
                "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar RespuestanJSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                  "    pm.response.to.not.be.empty;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                  "    pm.response.to.have.header(\"Content-Type\"); \r",
                  "});"
                ],
                "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "accounts",
              "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
              "up"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1da274b-0fc2-4b9b-ae14-15380e7b7b4d",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 275,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "107dab3c-b50b-43a2-98a0-5197534e9ae8",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:45 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "24"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              85,
              78,
              65,
              85,
              84,
              72,
              79,
              82,
              73,
              90,
              69,
              68,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 113,
          "responseSize": 24
        },
        "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 401",
              "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Validar RespuestanJSON",
            "skipped": false
          },
          {
            "assertion": "Validar 'Body' No Vacio",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1b9735f3-3a8a-41f7-a1fe-6bc9667aa2e4",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2acb70f6-a94c-4b3e-be31-ea2a85de41a0"
        },
        "item": {
          "id": "e5b01055-552d-4860-8f3e-86877f71658f",
          "name": "Crear Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "create"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "disabled": true,
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "contact",
                  "value": "Arya Stark"
                },
                {
                  "key": "phone",
                  "value": "5553768724"
                },
                {
                  "key": "rfc",
                  "value": "ASTT821103"
                },
                {
                  "key": "zipCode",
                  "value": "76543"
                },
                {
                  "key": "exteriorInfo",
                  "value": "Lop%C3%A9z%20Mateos%204213"
                },
                {
                  "key": "interiorInfo",
                  "value": "1"
                },
                {
                  "key": "region",
                  "value": "10"
                },
                {
                  "key": "municipality",
                  "value": "224"
                },
                {
                  "key": "area",
                  "value": "5666"
                },
                {
                  "key": "alias",
                  "value": "Mi direccion"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                  ""
                ],
                "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "create"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "disabled": true,
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "71ab4fc2-4260-4664-94c2-c340a8c69039",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 187,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "contact",
                "value": "Arya Stark"
              },
              {
                "key": "phone",
                "value": "5553768724"
              },
              {
                "key": "rfc",
                "value": "ASTT821103"
              },
              {
                "key": "zipCode",
                "value": "76543"
              },
              {
                "key": "exteriorInfo",
                "value": "Lop%C3%A9z%20Mateos%204213"
              },
              {
                "key": "interiorInfo",
                "value": "1"
              },
              {
                "key": "region",
                "value": "10"
              },
              {
                "key": "municipality",
                "value": "224"
              },
              {
                "key": "area",
                "value": "5666"
              },
              {
                "key": "alias",
                "value": "Mi direccion"
              }
            ]
          }
        },
        "response": {
          "id": "a109df3f-73a8-4f90-ac23-d39b5f63e0b5",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:46 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 220,
          "responseSize": 32
        },
        "id": "e5b01055-552d-4860-8f3e-86877f71658f",
        "assertions": [
          {
            "assertion": "Validar Estatus 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 201",
              "message": "expected response to have status code 201 but got 403",
              "stack": "AssertionError: expected response to have status code 201 but got 403\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta Contenta 'addressID'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 4,
              "test": "Validar Respuesta Contenta 'addressID'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'addressID'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'addressID'\n   at Object.eval sandbox-script.js:5:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1b9735f3-3a8a-41f7-a1fe-6bc9667aa2e4",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2acb70f6-a94c-4b3e-be31-ea2a85de41a0"
        },
        "item": {
          "id": "e5b01055-552d-4860-8f3e-86877f71658f",
          "name": "Crear Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "create"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "disabled": true,
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "contact",
                  "value": "Arya Stark"
                },
                {
                  "key": "phone",
                  "value": "5553768724"
                },
                {
                  "key": "rfc",
                  "value": "ASTT821103"
                },
                {
                  "key": "zipCode",
                  "value": "76543"
                },
                {
                  "key": "exteriorInfo",
                  "value": "Lop%C3%A9z%20Mateos%204213"
                },
                {
                  "key": "interiorInfo",
                  "value": "1"
                },
                {
                  "key": "region",
                  "value": "10"
                },
                {
                  "key": "municipality",
                  "value": "224"
                },
                {
                  "key": "area",
                  "value": "5666"
                },
                {
                  "key": "alias",
                  "value": "Mi direccion"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                  ""
                ],
                "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "create"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "disabled": true,
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "71ab4fc2-4260-4664-94c2-c340a8c69039",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 187,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "contact",
                "value": "Arya Stark"
              },
              {
                "key": "phone",
                "value": "5553768724"
              },
              {
                "key": "rfc",
                "value": "ASTT821103"
              },
              {
                "key": "zipCode",
                "value": "76543"
              },
              {
                "key": "exteriorInfo",
                "value": "Lop%C3%A9z%20Mateos%204213"
              },
              {
                "key": "interiorInfo",
                "value": "1"
              },
              {
                "key": "region",
                "value": "10"
              },
              {
                "key": "municipality",
                "value": "224"
              },
              {
                "key": "area",
                "value": "5666"
              },
              {
                "key": "alias",
                "value": "Mi direccion"
              }
            ]
          }
        },
        "response": {
          "id": "a109df3f-73a8-4f90-ac23-d39b5f63e0b5",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:46 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 220,
          "responseSize": 32
        },
        "id": "e5b01055-552d-4860-8f3e-86877f71658f",
        "assertions": [
          {
            "assertion": "Validar Estatus 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 201",
              "message": "expected response to have status code 201 but got 403",
              "stack": "AssertionError: expected response to have status code 201 but got 403\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta Contenta 'addressID'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 4,
              "test": "Validar Respuesta Contenta 'addressID'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'addressID'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'addressID'\n   at Object.eval sandbox-script.js:5:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "92419bf8-6bad-4ff6-8d56-499166605d21",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e344cfb-c112-41b7-81b2-c71e1abe74f8"
        },
        "item": {
          "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
          "name": "Ver Mis Direcciones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "get"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "depth",
                  "value": "1^"
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "region:4^"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              },
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "get"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ac598a8-2fb3-4f57-bd76-3fde3231fe3a",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "2acec787-54ed-4adf-8cab-49f057ef12e3",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 32
        },
        "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 403",
              "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "92419bf8-6bad-4ff6-8d56-499166605d21",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e344cfb-c112-41b7-81b2-c71e1abe74f8"
        },
        "item": {
          "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
          "name": "Ver Mis Direcciones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "get"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "depth",
                  "value": "1^"
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "region:4^"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              },
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "get"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ac598a8-2fb3-4f57-bd76-3fde3231fe3a",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "2acec787-54ed-4adf-8cab-49f057ef12e3",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:47 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 212,
          "responseSize": 32
        },
        "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 403",
              "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "eccafed2-a690-408b-b77d-a8668809d011",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aaa1d1f5-505b-4b03-b6c0-fe77004b28e1"
        },
        "item": {
          "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
          "name": "Borrar Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "delete",
                "{{addressID_env}}"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "disabled": true,
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "//var jsonData = pm.response.json();\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "delete",
              "null"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "disabled": true,
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e6ca5a87-af3f-4ac5-a2a0-494c434af319",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "125ec034-55ee-4686-a6ae-620ccc3c49f8",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:48 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 32
        },
        "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 403",
              "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          },
          {
            "assertion": "Confirmar Respuesta Contenga 'message'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 4,
              "test": "Confirmar Respuesta Contenga 'message'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'message'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'message'\n   at Object.eval sandbox-script.js:5:11)"
            }
          },
          {
            "assertion": "Confirmar Respuesta  Contenga 'deleted correctly'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 5,
              "test": "Confirmar Respuesta  Contenga 'deleted correctly'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'\n   at Object.eval sandbox-script.js:6:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "eccafed2-a690-408b-b77d-a8668809d011",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aaa1d1f5-505b-4b03-b6c0-fe77004b28e1"
        },
        "item": {
          "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
          "name": "Borrar Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "delete",
                "{{addressID_env}}"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "disabled": true,
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "//var jsonData = pm.response.json();\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "addresses",
              "v1",
              "delete",
              "null"
            ],
            "host": [
              "webapi",
              "segundamano",
              "mx"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic dW5kZWZpbmVkOm51bGw="
            },
            {
              "key": "Accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "disabled": true,
              "key": "x-source",
              "value": "PHOENIX_DESKTOP"
            },
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "Accept-Language",
              "value": "en-US,en;q=0.9"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e6ca5a87-af3f-4ac5-a2a0-494c434af319",
              "system": true
            },
            {
              "key": "Host",
              "value": "webapi.segundamano.mx",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "125ec034-55ee-4686-a6ae-620ccc3c49f8",
          "status": "Forbidden",
          "code": 403,
          "header": [
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Date",
              "value": "Sat, 22 Aug 2020 07:46:48 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Via",
              "value": "1.1 google"
            },
            {
              "key": "Alt-Svc",
              "value": "clear"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 32
        },
        "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected response to have status code 200 but got 403",
              "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:11)"
            }
          },
          {
            "assertion": "Validar Respuesta JSON",
            "skipped": false
          },
          {
            "assertion": "Validar Respuesta No Vacia",
            "skipped": false
          },
          {
            "assertion": "Confirmar Header 'Content-Type'",
            "skipped": false
          },
          {
            "assertion": "Confirmar Respuesta Contenga 'message'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 4,
              "test": "Confirmar Respuesta Contenga 'message'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'message'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'message'\n   at Object.eval sandbox-script.js:5:11)"
            }
          },
          {
            "assertion": "Confirmar Respuesta  Contenga 'deleted correctly'",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 5,
              "test": "Confirmar Respuesta  Contenga 'deleted correctly'",
              "message": "expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'",
              "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'\n   at Object.eval sandbox-script.js:6:11)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 666
    },
    "failures": [
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "387f65c5-13e8-45c6-93d5-075f414bd8d9",
          "timestamp": 1598082402410,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
          "name": "Ver Categorias",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "public",
                "categories",
                "insert"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                  "//console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                  "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                  "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                  "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                  "\r",
                  "//pm.test(\"Check: \", function() {\r",
                  "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                  "//})\r",
                  "\r",
                  "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                  "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "\r",
                  "\r",
                  "//////////////////////////////////////////////////////////////////////////////////////////\r",
                  "\r",
                  "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cad24c0-8847-444d-b336-be1ff4606eed",
          "httpRequestId": "fe7160c8-a1ab-4fbd-b555-affc226c2251"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "6dfbf960940c6c8511c0c5674324d46e",
          "id": "9ccd4289-92ad-446a-a8a8-f60aa3b056af",
          "timestamp": 1598082402439,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
          "name": "Ver Categorias",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "public",
                "categories",
                "insert"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                  "//console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                  "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                  "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                  "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                  "\r",
                  "//pm.test(\"Check: \", function() {\r",
                  "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                  "//})\r",
                  "\r",
                  "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                  "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "\r",
                  "\r",
                  "//////////////////////////////////////////////////////////////////////////////////////////\r",
                  "\r",
                  "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cad24c0-8847-444d-b336-be1ff4606eed",
          "httpRequestId": "fe7160c8-a1ab-4fbd-b555-affc226c2251",
          "scriptId": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
          "execution": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validar Respuesta en JSON",
          "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
          "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "67153b7be5e10334282a008420b4e077",
          "id": "310544d8-2dd1-4e98-92b8-7ccce974738a",
          "timestamp": 1598082402443,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
          "name": "Ver Categorias",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "public",
                "categories",
                "insert"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                  "//console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                  "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                  "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                  "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                  "\r",
                  "//pm.test(\"Check: \", function() {\r",
                  "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                  "//})\r",
                  "\r",
                  "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                  "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "\r",
                  "\r",
                  "//////////////////////////////////////////////////////////////////////////////////////////\r",
                  "\r",
                  "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cad24c0-8847-444d-b336-be1ff4606eed",
          "httpRequestId": "fe7160c8-a1ab-4fbd-b555-affc226c2251",
          "scriptId": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
          "execution": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "b3c065fa-a3a8-4b79-b4a4-89b8bd8d9e64",
          "timestamp": 1598082402448,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
          "name": "Ver Categorias",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1",
                "public",
                "categories",
                "insert"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                  "//console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                  "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                  "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                  "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                  "\r",
                  "//pm.test(\"Check: \", function() {\r",
                  "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                  "//})\r",
                  "\r",
                  "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                  "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "\r",
                  "\r",
                  "//////////////////////////////////////////////////////////////////////////////////////////\r",
                  "\r",
                  "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 11,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8cad24c0-8847-444d-b336-be1ff4606eed",
          "httpRequestId": "fe7160c8-a1ab-4fbd-b555-affc226c2251",
          "scriptId": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "f2cbda3a-9cf5-4dfe-a4d4-ccad08d7013a",
          "timestamp": 1598082402467,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
          "name": "Ver Categorias v1.1",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "categories",
                "filter"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.+"
              },
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b57b259b-8d60-4226-848b-b9d74d87c70d",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "646d1760-d875-4301-ba7e-b470437f4953"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "cee35588183bee1068031e3199eabfb6",
          "id": "4b63948d-d458-46a9-aec8-18585414ced4",
          "timestamp": 1598082402477,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
          "name": "Ver Categorias v1.1",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "categories",
                "filter"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.+"
              },
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b57b259b-8d60-4226-848b-b9d74d87c70d",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "646d1760-d875-4301-ba7e-b470437f4953",
          "scriptId": "9e7a6919-103f-4340-a226-747c844d2cf9",
          "execution": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validar Respuesta en JSON",
          "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
          "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "5fd48c63543bb017a0b9183846ae242b",
          "id": "c94c6891-cfbd-4f02-96c2-a29a62a917d2",
          "timestamp": 1598082402479,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
          "name": "Ver Categorias v1.1",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "categories",
                "filter"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.+"
              },
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b57b259b-8d60-4226-848b-b9d74d87c70d",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "646d1760-d875-4301-ba7e-b470437f4953",
          "scriptId": "9e7a6919-103f-4340-a226-747c844d2cf9",
          "execution": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "08305de8-e8c5-470d-a9ee-ccff97626c7c",
          "timestamp": 1598082402481,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
          "name": "Ver Categorias v1.1",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "categories",
                "filter"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.+"
              },
              {
                "key": "lang",
                "value": "es"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                  "\r",
                  "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                  "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b57b259b-8d60-4226-848b-b9d74d87c70d",
          "length": 11,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "646d1760-d875-4301-ba7e-b470437f4953",
          "scriptId": "9e7a6919-103f-4340-a226-747c844d2cf9"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "639c02e7-9b9b-4cd9-81ff-3e90682cdd46",
          "timestamp": 1598082402497,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
          "name": "Ver Regiones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "regions"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                },
                {
                  "key": "depth",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22c68db0-1144-48a7-8f9f-017c49930515",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd548b7b-7265-4b54-8642-eea776261eaa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "b75a7adcc2350aee13b74c6cc1005e73",
          "id": "69c936f8-267f-493d-b2e0-0888820b8713",
          "timestamp": 1598082402505,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
          "name": "Ver Regiones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "regions"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                },
                {
                  "key": "depth",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22c68db0-1144-48a7-8f9f-017c49930515",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd548b7b-7265-4b54-8642-eea776261eaa",
          "scriptId": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
          "execution": "357709b6-7dcd-481c-8f91-ab460a8ba862"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validar Respuesta en JSON",
          "message": "expected response body to be a valid json but got error Unexpected token u in JSON at position 0",
          "stack": "AssertionError: expected response body to be a valid json but got error Unexpected token u in JSON at position 0\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "ff21373fd8d286e2671ff97e94c7bddb",
          "id": "78d93232-d120-41fb-877a-783d74e5f95e",
          "timestamp": 1598082402507,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
          "name": "Ver Regiones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "regions"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                },
                {
                  "key": "depth",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22c68db0-1144-48a7-8f9f-017c49930515",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd548b7b-7265-4b54-8642-eea776261eaa",
          "scriptId": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
          "execution": "357709b6-7dcd-481c-8f91-ab460a8ba862"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "6982bb2b-868e-4812-bb3b-896709322129",
          "timestamp": 1598082402509,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
          "name": "Ver Regiones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "public",
                "regions"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                },
                {
                  "key": "depth",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "depth",
                "value": "1"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                  "})\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "22c68db0-1144-48a7-8f9f-017c49930515",
          "length": 11,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fd548b7b-7265-4b54-8642-eea776261eaa",
          "scriptId": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "67d22e49-e2f8-4e8d-a65f-3999ce9f1799",
          "timestamp": 1598082402543,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
          "name": "Crear Cuenta",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              },
              {
                "key": "Authorization",
                "value": "Basic {{base64}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                "type": "text/javascript",
                "exec": [
                  "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                  "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                  "//Imprimir en consola\r",
                  "console.log(\"Valor correo\", numrandom)\r",
                  "// Creamos una variable llamada email para formar un correo electronoco\r",
                  "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                  "\r",
                  "//Seteamos una variable de ambiente donde guardamos el correo\r",
                  "pm.environment.set(\"email\", email)\r",
                  "// Mostramos en consola el correo\r",
                  "console.log(\"email\", email);\r",
                  "\r",
                  "// Creamos una variable para concatenar\r",
                  "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                  "\r",
                  "// Encodeamos en base 64 lo concatenado anteriormente\r",
                  "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                  "// Mostramos en cosola lo encodead\r",
                  "console.log(\"Encode: \", encoded)\r",
                  "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                  "pm.environment.set(\"base64\", encoded)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 401\", function() {\r",
                  "    pm.response.to.have.status(401)\r",
                  "})\r",
                  "\r",
                  "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                  "pm.test(\"Probar Response No Vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "//\t});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                  "\r",
                  "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                  "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                  "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                  "//})\r",
                  ""
                ],
                "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "c67f6911-15bf-4ed3-889b-4af6c9e3db63",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29151905-aa57-4118-874c-d089ab416d18"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "aa025925-d254-492b-b7aa-ad4a02ec20b1",
          "timestamp": 1598082402551,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
          "name": "Crear Cuenta",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain,*.*"
              },
              {
                "key": "Authorization",
                "value": "Basic {{base64}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                "type": "text/javascript",
                "exec": [
                  "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                  "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                  "//Imprimir en consola\r",
                  "console.log(\"Valor correo\", numrandom)\r",
                  "// Creamos una variable llamada email para formar un correo electronoco\r",
                  "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                  "\r",
                  "//Seteamos una variable de ambiente donde guardamos el correo\r",
                  "pm.environment.set(\"email\", email)\r",
                  "// Mostramos en consola el correo\r",
                  "console.log(\"email\", email);\r",
                  "\r",
                  "// Creamos una variable para concatenar\r",
                  "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                  "\r",
                  "// Encodeamos en base 64 lo concatenado anteriormente\r",
                  "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                  "// Mostramos en cosola lo encodead\r",
                  "console.log(\"Encode: \", encoded)\r",
                  "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                  "pm.environment.set(\"base64\", encoded)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 401\", function() {\r",
                  "    pm.response.to.have.status(401)\r",
                  "})\r",
                  "\r",
                  "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                  "pm.test(\"Probar Response No Vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "//\t});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                  "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                  "\r",
                  "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                  "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                  "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                  "//})\r",
                  ""
                ],
                "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "c67f6911-15bf-4ed3-889b-4af6c9e3db63",
          "length": 11,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "29151905-aa57-4118-874c-d089ab416d18",
          "scriptId": "4c931153-1e97-4a15-8a76-d2a68124d7dc"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "11b6b7d1-6bd0-4d83-bfb1-0d5a2101734d",
          "timestamp": 1598082404245,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
          "name": "Request No Auth",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 400\", function() {\r",
                  "    pm.response.to.have.status(400)\r",
                  "})\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                  "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                  "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "44691043-105f-4efe-93c5-d1e4cf27f48a",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec7c1d86-8795-479e-b65a-1affc871c1a0"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "d2953319-0a45-4da1-9ce6-30c35900229d",
          "timestamp": 1598082404263,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
          "name": "Request No Auth",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 400\", function() {\r",
                  "    pm.response.to.have.status(400)\r",
                  "})\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                  "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                  "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "44691043-105f-4efe-93c5-d1e4cf27f48a",
          "length": 11,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ec7c1d86-8795-479e-b65a-1affc871c1a0",
          "scriptId": "37a072e6-cb80-4f48-b205-f437813b17eb"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "aaee073a-090f-4b48-a18b-5ab1f65a4475",
          "timestamp": 1598082404304,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "297a652c-b350-49cd-95f7-b575ac74973e",
          "name": "Crear Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Base64}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                "type": "text/javascript",
                "exec": [
                  "var emailValid = pm.environment.get(\"emailValido\")\r",
                  "var passValid = pm.environment.get(\"passValido\")\r",
                  "console.log(emailValid, passValid)\r",
                  "\r",
                  "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                  "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                  "\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json()\r",
                  "//console.log(\"access_token\", jsonData.access_token)\r",
                  "\r",
                  "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                  "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                  "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                  "\r",
                  "//console.log(\"access_token: \", jsonData.access_token)\r",
                  "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                  "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                  "\r",
                  "// Ejemplo de Split:\r",
                  "//let messageString = pm.response.json().message\r",
                  "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "31230f6b-d750-45d1-aeba-c9872b94e9f4",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "833e2679-8ba1-41db-a94e-016d1413aa00"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "4cc4c518-852a-491d-9cc5-6ef947480227",
          "timestamp": 1598082404314,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "297a652c-b350-49cd-95f7-b575ac74973e",
          "name": "Crear Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "nga",
                "api",
                "v1.1",
                "private",
                "accounts"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "lang",
                  "value": "es"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Base64}}"
              }
            ],
            "method": "POST"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                "type": "text/javascript",
                "exec": [
                  "var emailValid = pm.environment.get(\"emailValido\")\r",
                  "var passValid = pm.environment.get(\"passValido\")\r",
                  "console.log(emailValid, passValid)\r",
                  "\r",
                  "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                  "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                  "\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json()\r",
                  "//console.log(\"access_token\", jsonData.access_token)\r",
                  "\r",
                  "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                  "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                  "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                  "\r",
                  "//console.log(\"access_token: \", jsonData.access_token)\r",
                  "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                  "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                  "\r",
                  "// Ejemplo de Split:\r",
                  "//let messageString = pm.response.json().message\r",
                  "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                  "\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "31230f6b-d750-45d1-aeba-c9872b94e9f4",
          "length": 11,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "833e2679-8ba1-41db-a94e-016d1413aa00",
          "scriptId": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected response to have status code 200 but got 401",
          "stack": "AssertionError: expected response to have status code 200 but got 401\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d7b46b959c2299e0fdb845a62cc75f39",
          "id": "31585fa8-1e78-4064-864d-1dccd3712484",
          "timestamp": 1598082405063,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
          "name": "Crear Anuncio",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "accounts",
                "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                "up"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  ""
                ],
                "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar RespuestanJSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                  "    pm.response.to.not.be.empty;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                  "    pm.response.to.have.header(\"Content-Type\"); \r",
                  "});"
                ],
                "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cda7628e-f297-49b1-a124-db56ce8563a4",
          "length": 11,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "56cb82c0-efd1-4b64-bbb7-81c383bbe1bf",
          "scriptId": "92899026-9692-4beb-bbe5-9b2053d23da4",
          "execution": "d7836749-092c-464b-82fd-f7c10fd04226"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 201",
          "message": "expected response to have status code 201 but got 403",
          "stack": "AssertionError: expected response to have status code 201 but got 403\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "f686df5b4cedc711de0fedd79fa45073",
          "id": "08c224e8-9a94-4063-9177-1d3806decfff",
          "timestamp": 1598082405973,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e5b01055-552d-4860-8f3e-86877f71658f",
          "name": "Crear Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "create"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "disabled": true,
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "contact",
                  "value": "Arya Stark"
                },
                {
                  "key": "phone",
                  "value": "5553768724"
                },
                {
                  "key": "rfc",
                  "value": "ASTT821103"
                },
                {
                  "key": "zipCode",
                  "value": "76543"
                },
                {
                  "key": "exteriorInfo",
                  "value": "Lop%C3%A9z%20Mateos%204213"
                },
                {
                  "key": "interiorInfo",
                  "value": "1"
                },
                {
                  "key": "region",
                  "value": "10"
                },
                {
                  "key": "municipality",
                  "value": "224"
                },
                {
                  "key": "area",
                  "value": "5666"
                },
                {
                  "key": "alias",
                  "value": "Mi direccion"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                  ""
                ],
                "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1b9735f3-3a8a-41f7-a1fe-6bc9667aa2e4",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2acb70f6-a94c-4b3e-be31-ea2a85de41a0",
          "scriptId": "48e1d87f-aa86-4c5b-a208-a216e799483f",
          "execution": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 4,
          "test": "Validar Respuesta Contenta 'addressID'",
          "message": "expected '{\"error\":\"Authorization failed\"}' to include 'addressID'",
          "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'addressID'\n   at Object.eval sandbox-script.js:5:9)",
          "checksum": "9171dc05b2f5cc47760142f1738e5d85",
          "id": "03da2c3f-bed5-4bb1-b6a4-00c0482d1ca6",
          "timestamp": 1598082405981,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 5,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:4 in test-script",
        "source": {
          "id": "e5b01055-552d-4860-8f3e-86877f71658f",
          "name": "Crear Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "create"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "disabled": true,
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "contact",
                  "value": "Arya Stark"
                },
                {
                  "key": "phone",
                  "value": "5553768724"
                },
                {
                  "key": "rfc",
                  "value": "ASTT821103"
                },
                {
                  "key": "zipCode",
                  "value": "76543"
                },
                {
                  "key": "exteriorInfo",
                  "value": "Lop%C3%A9z%20Mateos%204213"
                },
                {
                  "key": "interiorInfo",
                  "value": "1"
                },
                {
                  "key": "region",
                  "value": "10"
                },
                {
                  "key": "municipality",
                  "value": "224"
                },
                {
                  "key": "area",
                  "value": "5666"
                },
                {
                  "key": "alias",
                  "value": "Mi direccion"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                  ""
                ],
                "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "1b9735f3-3a8a-41f7-a1fe-6bc9667aa2e4",
          "length": 11,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2acb70f6-a94c-4b3e-be31-ea2a85de41a0",
          "scriptId": "48e1d87f-aa86-4c5b-a208-a216e799483f",
          "execution": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected response to have status code 200 but got 403",
          "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "d327c8142d56da5061fc850b00549642",
          "id": "1920afcb-7ce0-4a43-b64e-278106f174ee",
          "timestamp": 1598082406794,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
          "name": "Ver Mis Direcciones",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "get"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "depth",
                  "value": "1^"
                },
                {
                  "disabled": true,
                  "key": "from",
                  "value": "region:4^"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              },
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json;charset=UTF-8"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "92419bf8-6bad-4ff6-8d56-499166605d21",
          "length": 11,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3e344cfb-c112-41b7-81b2-c71e1abe74f8",
          "scriptId": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
          "execution": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected response to have status code 200 but got 403",
          "stack": "AssertionError: expected response to have status code 200 but got 403\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "400bd3d97c103b9ec3bec36abc0cd29e",
          "id": "2da09781-6000-4308-b2f6-c5b1e6d77d7a",
          "timestamp": 1598082407626,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
          "name": "Borrar Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "delete",
                "{{addressID_env}}"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "disabled": true,
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "//var jsonData = pm.response.json();\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "eccafed2-a690-408b-b77d-a8668809d011",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aaa1d1f5-505b-4b03-b6c0-fe77004b28e1",
          "scriptId": "48e1d87f-aa86-4c5b-a208-a216e799483f",
          "execution": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 4,
          "test": "Confirmar Respuesta Contenga 'message'",
          "message": "expected '{\"error\":\"Authorization failed\"}' to include 'message'",
          "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'message'\n   at Object.eval sandbox-script.js:5:11)",
          "checksum": "e01d3fee963f1216a657f5e3af9edd7a",
          "id": "121dc936-9a6b-45c2-a48a-1fe595c5cea6",
          "timestamp": 1598082407636,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 5,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:4 in test-script",
        "source": {
          "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
          "name": "Borrar Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "delete",
                "{{addressID_env}}"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "disabled": true,
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "//var jsonData = pm.response.json();\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "eccafed2-a690-408b-b77d-a8668809d011",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aaa1d1f5-505b-4b03-b6c0-fe77004b28e1",
          "scriptId": "48e1d87f-aa86-4c5b-a208-a216e799483f",
          "execution": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 5,
          "test": "Confirmar Respuesta  Contenga 'deleted correctly'",
          "message": "expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'",
          "stack": "AssertionError: expected '{\"error\":\"Authorization failed\"}' to include 'deleted correctly'\n   at Object.eval sandbox-script.js:6:11)",
          "checksum": "6cd6dc1b74f6d0e9aaf84c04b83619f5",
          "id": "2da07434-d1bd-4afd-b1db-c395450a4084",
          "timestamp": 1598082407639,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 6,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:5 in test-script",
        "source": {
          "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
          "name": "Borrar Direccion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "addresses",
                "v1",
                "delete",
                "{{addressID_env}}"
              ],
              "host": [
                "webapi",
                "segundamano",
                "mx"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Basic {{Token_uuid_Atoken}}"
              },
              {
                "key": "Accept",
                "value": "application/json, text/plain, */*"
              },
              {
                "disabled": true,
                "key": "x-source",
                "value": "PHOENIX_DESKTOP"
              },
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "Accept-Language",
                "value": "en-US,en;q=0.9"
              }
            ],
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                "type": "text/javascript",
                "exec": [
                  "//var email = pm.environment.get('correoValido')\r",
                  "let email = \"v070595@hotmail.com\";\r",
                  "//console.log(\"Email: \", email);\r",
                  "var pass = pm.environment.get('passValido')\r",
                  "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                  "pm.environment.set(\"Base64\",encodeKeys)\r",
                  "\r",
                  "pm.sendRequest({\r",
                  "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                  "    method: 'POST',\r",
                  "    header: 'Authorization: Basic ' + encodeKeys,\r",
                  "}, function(err, res){\r",
                  "    //console.log(\"Res SendRequest: \",res )\r",
                  "    var jsonResponse = res.json()\r",
                  "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                  "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                  "});\r",
                  "\r",
                  "var token = pm.environment.get('access_token')\r",
                  "var uuid = pm.environment.get('uuid')\r",
                  "//var token_uuid = token\r",
                  "console.log(\"Token and uuid: \", token, uuid)\r",
                  "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                  "\r",
                  "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.response.to.have.status(200)\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta JSON\", function() {\r",
                  "    pm.response.to.be.json;\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "//var jsonData = pm.response.json();\r",
                  "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                  "\r",
                  "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                  "})\r",
                  ""
                ],
                "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812"
          },
          "item": [
            {
              "id": "70ba83f5-8d58-4bee-9ee4-7d5d0acedbbc",
              "name": "Ver Categorias",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "public",
                    "categories",
                    "insert"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
                      "//console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
                      "console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
                      "console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
                      "console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
                      "\r",
                      "//pm.test(\"Check: \", function() {\r",
                      "//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
                      "//})\r",
                      "\r",
                      "pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"categories\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"code\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
                      "     //pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "\r",
                      "\r",
                      "//////////////////////////////////////////////////////////////////////////////////////////\r",
                      "\r",
                      "pm.test(\"Validar campo Labels en JSON response\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "cad7036e-7c51-4d5e-aef3-0f70ceb31975"
                  }
                }
              ]
            },
            {
              "id": "39d6ec4e-3fc0-4867-bf76-9b761fc88912",
              "name": "Ver Categorias v1.1",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "categories",
                    "filter"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.+"
                  },
                  {
                    "key": "lang",
                    "value": "es"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9e7a6919-103f-4340-a226-747c844d2cf9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
                      "\r",
                      "pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
                      "    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"label\");\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "4129c314-6e82-4bfc-8793-fc5afd96e4d8"
                  }
                }
              ]
            },
            {
              "id": "8ebe6ea1-289f-4ed3-a42a-b3d66849a142",
              "name": "Ver Regiones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "public",
                    "regions"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    },
                    {
                      "key": "depth",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "depth",
                    "value": "1"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta en JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"children\");\r",
                      "})\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "357709b6-7dcd-481c-8f91-ab460a8ba862"
                  }
                }
              ]
            },
            {
              "id": "2341c4d4-4a66-4b9b-b9ea-9843fd682f9c",
              "name": "Crear Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain,*.*"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{base64}}"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
                    "type": "text/javascript",
                    "exec": [
                      "//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
                      "let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
                      "//Imprimir en consola\r",
                      "console.log(\"Valor correo\", numrandom)\r",
                      "// Creamos una variable llamada email para formar un correo electronoco\r",
                      "var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
                      "\r",
                      "//Seteamos una variable de ambiente donde guardamos el correo\r",
                      "pm.environment.set(\"email\", email)\r",
                      "// Mostramos en consola el correo\r",
                      "console.log(\"email\", email);\r",
                      "\r",
                      "// Creamos una variable para concatenar\r",
                      "var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
                      "\r",
                      "// Encodeamos en base 64 lo concatenado anteriormente\r",
                      "var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
                      "// Mostramos en cosola lo encodead\r",
                      "console.log(\"Encode: \", encoded)\r",
                      "//Seteamos la variable donde se formo nuestro \"Token\"\r",
                      "pm.environment.set(\"base64\", encoded)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "f3d373dc-63eb-4a7e-99c8-17e0c6ef32e8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 401\", function() {\r",
                      "    pm.response.to.have.status(401)\r",
                      "})\r",
                      "\r",
                      "/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
                      "pm.test(\"Probar Response No Vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "//\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "//\t});\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Exista Texto 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
                      "    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
                      "\r",
                      "// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
                      "//pm.test(\"Ambiente sea QA-SM\", function() {\r",
                      "//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
                      "//})\r",
                      ""
                    ],
                    "_lastExecutionId": "d6fc4dad-78b2-4996-9db5-a668b10c081e"
                  }
                }
              ]
            },
            {
              "id": "99b34d25-860c-4896-b804-abb2f2939074",
              "name": "Modificar Usuario/Cuenta",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1",
                    "private",
                    "accounts",
                    "10795154"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Authorization",
                    "value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "es"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "console.log(\"Token: \", token)\r",
                      "//var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "//console.log(\"Token and uuid: \", token, uuid)\r",
                      "//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
                      "let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
                      "pm.environment.set(\"Token_Modificar\",tokenMod)\r",
                      "console.log(\"Token_Modificar: \", tokenMod)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2346edb6-35e5-412a-a9d9-a706deea228a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "7360468b-578d-4820-b265-83f10009c44c"
                  }
                }
              ]
            },
            {
              "id": "9a1e1167-2908-45e6-b2f7-f82cc8c380b2",
              "name": "Request No Auth",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37a072e6-cb80-4f48-b205-f437813b17eb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 400\", function() {\r",
                      "    pm.response.to.have.status(400)\r",
                      "})\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"error\")\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Texto En Respuesta\", function(){\r",
                      "    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
                      "    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "4cf11773-f712-4ba4-bfd3-e552fb2bef28"
                  }
                }
              ]
            },
            {
              "id": "297a652c-b350-49cd-95f7-b575ac74973e",
              "name": "Crear Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "nga",
                    "api",
                    "v1.1",
                    "private",
                    "accounts"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "lang",
                      "value": "es"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Base64}}"
                  }
                ],
                "method": "POST"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
                    "type": "text/javascript",
                    "exec": [
                      "var emailValid = pm.environment.get(\"emailValido\")\r",
                      "var passValid = pm.environment.get(\"passValido\")\r",
                      "console.log(emailValid, passValid)\r",
                      "\r",
                      "// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
                      "console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
                      "\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9e1b6de9-6f2d-4e45-8d11-f531d900bb8a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json()\r",
                      "//console.log(\"access_token\", jsonData.access_token)\r",
                      "\r",
                      "pm.environment.set(\"access_token\", jsonData.access_token)\r",
                      "pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
                      "//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
                      "\r",
                      "//console.log(\"access_token: \", jsonData.access_token)\r",
                      "//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
                      "//console.log(\"uuid: \", jsonData.account.uuid)\r",
                      "\r",
                      "// Ejemplo de Split:\r",
                      "//let messageString = pm.response.json().message\r",
                      "//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
                      "\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "0dfb38e3-b72f-42a2-a90a-fc2a253ea22a"
                  }
                }
              ]
            },
            {
              "id": "1b4eeb64-5fee-4466-8601-94692ae1f150",
              "name": "Crear Anuncio",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "accounts",
                    "c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
                    "up"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      ""
                    ],
                    "_lastExecutionId": "bc316953-111d-47cb-a9f9-456b1c376e38"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "92899026-9692-4beb-bbe5-9b2053d23da4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar RespuestanJSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar 'Body' No Vacio\", function() {\r",
                      "    pm.response.to.not.be.empty;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
                      "    pm.response.to.have.header(\"Content-Type\"); \r",
                      "});"
                    ],
                    "_lastExecutionId": "d7836749-092c-464b-82fd-f7c10fd04226"
                  }
                }
              ]
            },
            {
              "id": "e5b01055-552d-4860-8f3e-86877f71658f",
              "name": "Crear Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "create"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "disabled": true,
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "key": "contact",
                      "value": "Arya Stark"
                    },
                    {
                      "key": "phone",
                      "value": "5553768724"
                    },
                    {
                      "key": "rfc",
                      "value": "ASTT821103"
                    },
                    {
                      "key": "zipCode",
                      "value": "76543"
                    },
                    {
                      "key": "exteriorInfo",
                      "value": "Lop%C3%A9z%20Mateos%204213"
                    },
                    {
                      "key": "interiorInfo",
                      "value": "1"
                    },
                    {
                      "key": "region",
                      "value": "10"
                    },
                    {
                      "key": "municipality",
                      "value": "224"
                    },
                    {
                      "key": "area",
                      "value": "5666"
                    },
                    {
                      "key": "alias",
                      "value": "Mi direccion"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9c3f20d6-abd9-4b0a-8648-132d4f4eb2c6"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
                      ""
                    ],
                    "_lastExecutionId": "f3b58b07-e0d8-4ec0-9eae-f3c056d3898e"
                  }
                }
              ]
            },
            {
              "id": "f1ee9236-c0e6-441c-a318-cf7fd895c1d0",
              "name": "Ver Mis Direcciones",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "get"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "depth",
                      "value": "1^"
                    },
                    {
                      "disabled": true,
                      "key": "from",
                      "value": "region:4^"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  },
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json;charset=UTF-8"
                  }
                ],
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "9085e2f9-aee4-47c9-b4b8-dc91e42ba4c8"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "448db99f-e47e-48af-a3e8-737d6eb1a65c"
                  }
                }
              ]
            },
            {
              "id": "9f984308-4b6b-408a-8b65-d01698d1583b",
              "name": "Borrar Direccion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "addresses",
                    "v1",
                    "delete",
                    "{{addressID_env}}"
                  ],
                  "host": [
                    "webapi",
                    "segundamano",
                    "mx"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Basic {{Token_uuid_Atoken}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json, text/plain, */*"
                  },
                  {
                    "disabled": true,
                    "key": "x-source",
                    "value": "PHOENIX_DESKTOP"
                  },
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "key": "Accept-Language",
                    "value": "en-US,en;q=0.9"
                  }
                ],
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "66780380-a7e6-4d77-890a-373af0bb4510",
                    "type": "text/javascript",
                    "exec": [
                      "//var email = pm.environment.get('correoValido')\r",
                      "let email = \"v070595@hotmail.com\";\r",
                      "//console.log(\"Email: \", email);\r",
                      "var pass = pm.environment.get('passValido')\r",
                      "let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
                      "pm.environment.set(\"Base64\",encodeKeys)\r",
                      "\r",
                      "pm.sendRequest({\r",
                      "    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
                      "    method: 'POST',\r",
                      "    header: 'Authorization: Basic ' + encodeKeys,\r",
                      "}, function(err, res){\r",
                      "    //console.log(\"Res SendRequest: \",res )\r",
                      "    var jsonResponse = res.json()\r",
                      "    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
                      "    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
                      "});\r",
                      "\r",
                      "var token = pm.environment.get('access_token')\r",
                      "var uuid = pm.environment.get('uuid')\r",
                      "//var token_uuid = token\r",
                      "console.log(\"Token and uuid: \", token, uuid)\r",
                      "let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
                      "\r",
                      "pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "2b59c878-75ec-4bee-acec-21341ab9481a"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.response.to.have.status(200)\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta JSON\", function() {\r",
                      "    pm.response.to.be.json;\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"message\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "//var jsonData = pm.response.json();\r",
                      "//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
                      "\r",
                      "pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
                      "})\r",
                      ""
                    ],
                    "_lastExecutionId": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
            "name": "PracticaSM",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "eccafed2-a690-408b-b77d-a8668809d011",
          "length": 11,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "aaa1d1f5-505b-4b03-b6c0-fe77004b28e1",
          "scriptId": "48e1d87f-aa86-4c5b-a208-a216e799483f",
          "execution": "fe7e20d7-0f76-42e5-8ad9-0900f26a20c4"
        }
      }
    ],
    "error": null
  }
}