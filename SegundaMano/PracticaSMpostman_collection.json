{
	"info": {
		"_postman_id": "2a9a7de1-e04c-4ec1-b50f-61c7a8b5a812",
		"name": "PracticaSM",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ver Categorias",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "44b582b4-36ec-4f7c-9eaf-9cc454ff58c9",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta en JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(\" *** INICIO DE IMPRESION DE DATOS ***\")\r",
							"//console.log(\"Respuesta JSON: \", jsonData)\r",
							"console.log(\"Code: \", jsonData.categories[0].categories[0].code)\r",
							"console.log(\"Labels: \", jsonData.categories[0].categories[0].label)\r",
							"console.log(\"Max. Images: \", jsonData.categories[0].categories[0].max_images)\r",
							"console.log(\" *** FIN DE IMPRESION DE DATOS ***\")\r",
							"\r",
							"//pm.test(\"Check: \", function() {\r",
							"//    pm.expect(jsonData.page).not.eq(\"undefinedd\");\r",
							"//})\r",
							"\r",
							"pm.test(\"Validar Existencia de Texto en 'Body'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"categories\");\r",
							"    pm.expect(pm.response.text()).to.include(\"code\");\r",
							"    pm.expect(pm.response.text()).to.include(\"label\");\r",
							"    pm.expect(pm.response.text()).to.include(\"max_images\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
							"    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
							"    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validar 'Body' contiene campo 'label'\", function() {\r",
							"     //pm.expect(pm.response.text()).to.include(\"label\");\r",
							"     pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"//////////////////////////////////////////////////////////////////////////////////////////\r",
							"\r",
							"pm.test(\"Validar campo Labels en JSON response\", function() {\r",
							"    pm.expect(jsonData.categories[0].categories[0].label).to.eq(\"Venta inmuebles\");\r",
							"})\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain,*.*",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1/public/categories/insert?lang=es",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1",
						"public",
						"categories",
						"insert"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ver Categorias v1.1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9e7a6919-103f-4340-a226-747c844d2cf9",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta en JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"console.log(\"Impresion de contenido en campo 'code': \", jsonData.categories[0].categories[0].code)\r",
							"\r",
							"pm.test(\"Validar Contenido en Campo 'code' de Categorias\", function() {\r",
							"    pm.expect(jsonData.categories[0].categories[0].code).to.be.eq('1020');\r",
							"    pm.expect(jsonData.categories[0].categories[0].code).to.be.a(\"string\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validar 'Body' Contiene Campo 'label'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"label\");\r",
							"    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain,*.+",
						"type": "text"
					},
					{
						"key": "lang",
						"value": "es",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1.1/public/categories/filter?lang=es",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1.1",
						"public",
						"categories",
						"filter"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Ver Regiones",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c956e0b4-31de-4aa3-af4e-8cb6f19a6958",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta en JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"\r",
							"\r",
							"pm.test(\"Validar en 'Body' Contenga Texto 'Todo Mexico'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"Todo MÃ©xico\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validar'Body' Contiene Campo 'label'\", function() {\r",
							"    pm.expect(pm.response.text()).to.deep.include(\"label\"); // 'deep' cuando queramos validar que el valor sea exactamente igual.\r",
							"})\r",
							"\r",
							"pm.test(\"Validar 'Body' Contiene Campo 'children'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"children\");\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "depth",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1.1/public/regions?lang=es&depth=1",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1.1",
						"public",
						"regions"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						},
						{
							"key": "depth",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear Cuenta",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ba5983d2-dcd8-4f18-a4ce-9c5d8d90cb90",
						"exec": [
							"//Creammos una variable que mande a llamar una funcion para generar numeros random\r",
							"let numrandom = Math.floor(Math.random() * Math.floor(99999999999999999) + 10000);\r",
							"//Imprimir en consola\r",
							"console.log(\"Valor correo\", numrandom)\r",
							"// Creamos una variable llamada email para formar un correo electronoco\r",
							"var email = \"agente\" + numrandom.toString(36) + \"@mailinator.com\";\r",
							"\r",
							"//Seteamos una variable de ambiente donde guardamos el correo\r",
							"pm.environment.set(\"email\", email)\r",
							"// Mostramos en consola el correo\r",
							"console.log(\"email\", email);\r",
							"\r",
							"// Creamos una variable para concatenar\r",
							"var emailFormado = (pm.environment.get(\"email\")).concat(\":\", (pm.environment.get(\"password\")))\r",
							"\r",
							"// Encodeamos en base 64 lo concatenado anteriormente\r",
							"var encoded = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailFormado))\r",
							"// Mostramos en cosola lo encodead\r",
							"console.log(\"Encode: \", encoded)\r",
							"//Seteamos la variable donde se formo nuestro \"Token\"\r",
							"pm.environment.set(\"base64\", encoded)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4c931153-1e97-4a15-8a76-d2a68124d7dc",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"\r",
							"pm.test(\"Validar Estatus 401\", function() {\r",
							"    pm.response.to.have.status(401)\r",
							"})\r",
							"\r",
							"/// 2 formas para comprobar body no vacio: to.be.withBody & to.have.body... cual es mejor?\r",
							"pm.test(\"Probar Response No Vacio\", function(){\r",
							"        pm.response.to.be.withBody;\r",
							"        });\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"//pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
							"//\tpm.expect(pm.response.responseTime).to.below(500); \r",
							"//\t});\r",
							"\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Exista Texto 'error'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"error\")\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta 'ACCOUNT_VERIFICATION_REQUIRED'\", function(){\r",
							"    pm.expect(pm.response.text()).to.deep.include(\"ACCOUNT_VERIFICATION_REQUIRED\")\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header Content-Type\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"/// habia seleccionado el header \"Authorization\" (request header) y me marco error la prueba, lo cambie a \"Content-Type\" (esta en response y request) y \"Server\" (header de response) y paso... tiene que ver con que un header es de request y otro de response? SI, SE DEBEN RELIZAR CON HEADER RESPONSE\r",
							"\r",
							"// Se debe setear manualmente una variable y darle el valor del nombre del ambiente, especie de probar en que ambiente esta.\r",
							"//pm.test(\"Ambiente sea QA-SM\", function() {\r",
							"//    pm.expect(pm.environment.get(\"env\")).to.equal(\"QA-SN\");\r",
							"//})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain,*.*",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "Basic {{base64}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"account\":{\"email\":\"{{email}}\",\"phone\":6556654455,\"name\":\"AgenteVentas\"}}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1.1/private/accounts?lang=es",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1.1",
						"private",
						"accounts"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Modificar Usuario/Cuenta",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ffd32c2f-2cf7-4743-b7a0-0214d1c9422e",
						"exec": [
							"//var email = pm.environment.get('correoValido')\r",
							"let email = \"v070595@hotmail.com\";\r",
							"//console.log(\"Email: \", email);\r",
							"var pass = pm.environment.get('passValido')\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
							"    method: 'POST',\r",
							"    header: 'Authorization: Basic ' + encodeKeys,\r",
							"}, function(err, res){\r",
							"    //console.log(\"Res SendRequest: \",res )\r",
							"    var jsonResponse = res.json()\r",
							"    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
							"    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
							"    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
							"});\r",
							"\r",
							"var token = pm.environment.get('access_token')\r",
							"console.log(\"Token: \", token)\r",
							"//var uuid = pm.environment.get('uuid')\r",
							"//var token_uuid = token\r",
							"//console.log(\"Token and uuid: \", token, uuid)\r",
							"//let encodeAToken = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(\"tag:scmcoord.com,2013:api \" + token));\r",
							"let tokenMod = \"tag:scmcoord.com,2013:api \" + token;\r",
							"pm.environment.set(\"Token_Modificar\",tokenMod)\r",
							"console.log(\"Token_Modificar: \", tokenMod)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "039e056d-d4b2-401c-88da-6583fc7a64ee",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header Content-Type\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "tag:scmcoord.com,2013:api mc1xac3f3a6c19c603931f122ba1904969c4d6873512_v2",
						"type": "text"
					},
					{
						"key": "Accept-Language",
						"value": "es",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"account\":{\r\n        \"name\":\"Ana Mendoza01\",\r\n        \"phone\":\"6222227810\",\r\n        \"locations\":[{\r\n            \"code\":\"4\",\"key\":\"region\",\"label\":\"Baja California\",\r\n            \"locations\":[{\r\n                \"code\":\"47\",\"key\":\"municipality\",\"label\":\"Mexicali\"\r\n            }]\r\n        }],\r\n        \"professional\":false,\r\n        \"phone_hidden\":false\r\n    }\r\n}"
				},
				"url": {
					"raw": "https://webapi.segundamano.mx/nga/api/v1/private/accounts/10795154?lang=es",
					"protocol": "https",
					"host": [
						"webapi",
						"segundamano",
						"mx"
					],
					"path": [
						"nga",
						"api",
						"v1",
						"private",
						"accounts",
						"10795154"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Request No Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37a072e6-cb80-4f48-b205-f437813b17eb",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"\r",
							"pm.test(\"Validar Estatus 400\", function() {\r",
							"    pm.response.to.have.status(400)\r",
							"})\r",
							"\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar 'Body' contenta 'error'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"error\")\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Texto En Respuesta\", function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"VALIDATION_FAILED\")\r",
							"    pm.expect(pm.response.text()).to.include(\"ERROR_AUTH_LOGIN\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1.1/private/accounts?lang=es",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1.1",
						"private",
						"accounts"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8b5ab63a-c60e-46a2-9607-2c6513b66d27",
						"exec": [
							"var emailValid = pm.environment.get(\"emailValido\")\r",
							"var passValid = pm.environment.get(\"passValido\")\r",
							"console.log(emailValid, passValid)\r",
							"\r",
							"// forma de concatenar dentro del encode (el anterior se concateno anteriormente por separado en Crear Usuario)\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(emailValid + \":\" + passValid));\r",
							"console.log(\"Impresion de Llave Encriptada\", encodeKeys)\r",
							"\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ff0c46ea-0219-4478-a6a6-91b52b0d6fd9",
						"exec": [
							"var jsonData = pm.response.json()\r",
							"//console.log(\"access_token\", jsonData.access_token)\r",
							"\r",
							"pm.environment.set(\"access_token\", jsonData.access_token)\r",
							"pm.environment.set(\"AccountID \", jsonData.account.account_id.split('/')[3])\r",
							"//pm.environment.set(\"uuid \", jsonData.account.uuid)\r",
							"\r",
							"//console.log(\"access_token: \", jsonData.access_token)\r",
							"//console.log(\"account_id: \", jsonData.account.account_id.split('/')[3])\r",
							"//console.log(\"uuid: \", jsonData.account.uuid)\r",
							"\r",
							"// Ejemplo de Split:\r",
							"//let messageString = pm.response.json().message\r",
							"//pm.environment.set(\"DownloadLink\", messageString.split('/')[5])\r",
							"\r",
							"\r",
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{Base64}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{url_base}}/nga/api/v1.1/private/accounts?lang=es",
					"protocol": "https",
					"host": [
						"{{url_base}}"
					],
					"path": [
						"nga",
						"api",
						"v1.1",
						"private",
						"accounts"
					],
					"query": [
						{
							"key": "lang",
							"value": "es"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear Anuncio",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f91b5fc1-90bb-4b4f-b22e-08b1d1fc83b6",
						"exec": [
							"//var email = pm.environment.get('correoValido')\r",
							"let email = \"v070595@hotmail.com\";\r",
							"//console.log(\"Email: \", email);\r",
							"var pass = pm.environment.get('passValido')\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
							"    method: 'POST',\r",
							"    header: 'Authorization: Basic ' + encodeKeys,\r",
							"}, function(err, res){\r",
							"    //console.log(\"Res SendRequest: \",res )\r",
							"    var jsonResponse = res.json()\r",
							"    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
							"    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
							"    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
							"});\r",
							"\r",
							"var token = pm.environment.get('access_token')\r",
							"var uuid = pm.environment.get('uuid')\r",
							"//var token_uuid = token\r",
							"console.log(\"Token and uuid: \", token, uuid)\r",
							"let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
							"\r",
							"pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "92899026-9692-4beb-bbe5-9b2053d23da4",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar RespuestanJSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar 'Body' No Vacio\", function() {\r",
							"    pm.response.to.not.be.empty;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header 'Content-Type'\", function() { \r",
							"    pm.response.to.have.header(\"Content-Type\"); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{Token_uuid_Atoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "x-source",
						"value": "PHOENIX_DESKTOP",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\":\"8041\",\r\n    \"subject\":\"Servico de consultoria\",\r\n    \"body\":\"ConsultorÃ­a de arquitectos a tus ordenes, pregunta por nuestros servicios\",\r\n    \"price\":\"1\",\r\n    \"region\":\"28\",\r\n    \"municipality\":\"1963\",\r\n    \"area\":\"83521\",\r\n    \"phone_hidden\":\"true\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://webapi.segundamano.mx/accounts/c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be/up",
					"protocol": "https",
					"host": [
						"webapi",
						"segundamano",
						"mx"
					],
					"path": [
						"accounts",
						"c3c8fcd8-6162-4ff0-80b1-8ff5ca5671be",
						"up"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear Direccion",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "66780380-a7e6-4d77-890a-373af0bb4510",
						"exec": [
							"//var email = pm.environment.get('correoValido')\r",
							"let email = \"v070595@hotmail.com\";\r",
							"//console.log(\"Email: \", email);\r",
							"var pass = pm.environment.get('passValido')\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
							"    method: 'POST',\r",
							"    header: 'Authorization: Basic ' + encodeKeys,\r",
							"}, function(err, res){\r",
							"    //console.log(\"Res SendRequest: \",res )\r",
							"    var jsonResponse = res.json()\r",
							"    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
							"    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
							"    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
							"});\r",
							"\r",
							"var token = pm.environment.get('access_token')\r",
							"var uuid = pm.environment.get('uuid')\r",
							"//var token_uuid = token\r",
							"console.log(\"Token and uuid: \", token, uuid)\r",
							"let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
							"\r",
							"pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
						"exec": [
							"pm.test(\"Validar Estatus 201\", function() {\r",
							"    pm.response.to.have.status(201)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"\r",
							"pm.test(\"Validar Respuesta Contenta 'addressID'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"addressID\");\r",
							"})\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"pm.environment.set(\"addressID_env\",jsonData.addressID)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{Token_uuid_Atoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "x-source",
						"value": "PHOENIX_DESKTOP",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "contact",
							"value": "Arya Stark",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "5553768724",
							"type": "text"
						},
						{
							"key": "rfc",
							"value": "ASTT821103",
							"type": "text"
						},
						{
							"key": "zipCode",
							"value": "76543",
							"type": "text"
						},
						{
							"key": "exteriorInfo",
							"value": "Lop%C3%A9z%20Mateos%204213",
							"type": "text"
						},
						{
							"key": "interiorInfo",
							"value": "1",
							"type": "text"
						},
						{
							"key": "region",
							"value": "10",
							"type": "text"
						},
						{
							"key": "municipality",
							"value": "224",
							"type": "text"
						},
						{
							"key": "area",
							"value": "5666",
							"type": "text"
						},
						{
							"key": "alias",
							"value": "Mi direccion",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://webapi.segundamano.mx/addresses/v1/create",
					"protocol": "https",
					"host": [
						"webapi",
						"segundamano",
						"mx"
					],
					"path": [
						"addresses",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Ver Mis Direcciones",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "24d2e304-40b6-4d3f-8c4e-5f967e8ee5e4",
						"exec": [
							"//var email = pm.environment.get('correoValido')\r",
							"let email = \"v070595@hotmail.com\";\r",
							"//console.log(\"Email: \", email);\r",
							"var pass = pm.environment.get('passValido')\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
							"    method: 'POST',\r",
							"    header: 'Authorization: Basic ' + encodeKeys,\r",
							"}, function(err, res){\r",
							"    //console.log(\"Res SendRequest: \",res )\r",
							"    var jsonResponse = res.json()\r",
							"    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
							"    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
							"    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
							"});\r",
							"\r",
							"var token = pm.environment.get('access_token')\r",
							"var uuid = pm.environment.get('uuid')\r",
							"//var token_uuid = token\r",
							"console.log(\"Token and uuid: \", token, uuid)\r",
							"let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
							"\r",
							"pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8ae3a44a-c1a7-4994-9cb6-77cbd0ce5b10",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"\r",
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json, text/plain, */*"
					},
					{
						"key": "Accept-Language",
						"type": "text",
						"value": "en-US,en;q=0.9"
					},
					{
						"key": "Authorization",
						"value": "Basic {{Token_uuid_Atoken}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json;charset=UTF-8",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "https://webapi.segundamano.mx/addresses/v1/get",
					"protocol": "https",
					"host": [
						"webapi",
						"segundamano",
						"mx"
					],
					"path": [
						"addresses",
						"v1",
						"get"
					],
					"query": [
						{
							"key": "depth",
							"value": "1^",
							"disabled": true
						},
						{
							"key": "from",
							"value": "region:4^",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar Direccion",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "66780380-a7e6-4d77-890a-373af0bb4510",
						"exec": [
							"//var email = pm.environment.get('correoValido')\r",
							"let email = \"v070595@hotmail.com\";\r",
							"//console.log(\"Email: \", email);\r",
							"var pass = pm.environment.get('passValido')\r",
							"let encodeKeys = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(email + \":\" + pass));\r",
							"pm.environment.set(\"Base64\",encodeKeys)\r",
							"\r",
							"pm.sendRequest({\r",
							"    url:'https://webapi.segundamano.mx/nga/api/v1.1/private/accounts?lang=es',\r",
							"    method: 'POST',\r",
							"    header: 'Authorization: Basic ' + encodeKeys,\r",
							"}, function(err, res){\r",
							"    //console.log(\"Res SendRequest: \",res )\r",
							"    var jsonResponse = res.json()\r",
							"    //console.log(\"jsonresponse: \", jsonResponse.access_token)\r",
							"    pm.environment.set(\"access_token\", jsonResponse.access_token)\r",
							"    pm.environment.set(\"uuid\",jsonResponse.account.uuid )\r",
							"});\r",
							"\r",
							"var token = pm.environment.get('access_token')\r",
							"var uuid = pm.environment.get('uuid')\r",
							"//var token_uuid = token\r",
							"console.log(\"Token and uuid: \", token, uuid)\r",
							"let encode = CryptoJS.enc.Base64.stringify(CryptoJS.enc.Utf8.parse(uuid + \":\" + token));\r",
							"\r",
							"pm.environment.set(\"Token_uuid_Atoken\",encode)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "48e1d87f-aa86-4c5b-a208-a216e799483f",
						"exec": [
							"pm.test(\"Validar Estatus 200\", function() {\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta JSON\", function() {\r",
							"    pm.response.to.be.json;\r",
							"})\r",
							"\r",
							"pm.test(\"Validar Respuesta No Vacia\", function() {\r",
							"    pm.response.to.have.body;\r",
							"})\r",
							"\r",
							"pm.test (\"Confirmar Header 'Content-Type'\", function() \r",
							"    { pm.response.to.have.header(\"Content-Type\"); });\r",
							"\r",
							"pm.test (\"Confirmar Respuesta Contenga 'message'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"message\")\r",
							"})\r",
							"\r",
							"\r",
							"//var jsonData = pm.response.json();\r",
							"//console.log(\"Impresion de Respuesta JSON: \", jsonData)\r",
							"\r",
							"pm.test (\"Confirmar Respuesta  Contenga 'deleted correctly'\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"deleted correctly\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Basic {{Token_uuid_Atoken}}",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json, text/plain, */*",
						"type": "text"
					},
					{
						"key": "x-source",
						"value": "PHOENIX_DESKTOP",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Accept-Language",
						"value": "en-US,en;q=0.9",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://webapi.segundamano.mx/addresses/v1/delete/{{addressID_env}}",
					"protocol": "https",
					"host": [
						"webapi",
						"segundamano",
						"mx"
					],
					"path": [
						"addresses",
						"v1",
						"delete",
						"{{addressID_env}}"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}