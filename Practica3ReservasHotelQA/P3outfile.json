{
  "collection": {
    "_": {
      "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
    },
    "item": [
      {
        "id": "395defd3-cb65-4bd5-816b-5122636c9684",
        "name": "Health Check",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ping"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 201\", function() {\r",
                "    pm.response.to.have.status(201)\r",
                "});\r",
                "\r",
                "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(201)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Header: Content-Type\", function() {\r",
                "    pm.response.to.have.header(\"Content-Type\")\r",
                "});\r",
                "\r",
                "\r",
                "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                "console.log(\"Respuesta: \", pm.response)\r",
                "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                "console.log(\"Header: \", pm.response.headers)\r",
                ""
              ],
              "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
            }
          }
        ]
      },
      {
        "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
        "name": "Ver Reservas Existentes",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
              "type": "text/javascript",
              "exec": [
                "var jsonData =pm.response.json()\r",
                "\r",
                "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                "    pm.response.to.have.body;\r",
                "})\r",
                "\r",
                "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                "\t});\r",
                "\r",
                "pm.test (\"Validar que exista Content-Type\", function() \r",
                "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                "\r",
                "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                "    pm.response.to.be.json;\r",
                "    })\r",
                "\r",
                "pm.test (\"Validar Texto\", function() {\r",
                "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                "});\r",
                "\r",
                "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                "    \r",
                "});\r",
                "\r",
                "\r",
                "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
            }
          }
        ]
      },
      {
        "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
        "name": "Crear Reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Respuesta JSON: \", jsonData)\r",
                "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                "\r",
                "pm.environment.set('ID', jsonData.bookingid);\r",
                "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                "\r",
                "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                "    \r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
            }
          }
        ]
      },
      {
        "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
        "name": "Ver Reservacion",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "{{ID}}"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json()\r",
                "console.log(\"Nombre: \", jsonData.firstname)\r",
                "\r",
                "pm.test(\"Validar Nombre\", function(){\r",
                "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                "})\r",
                "\r",
                "\r",
                "console.log(\"LastName: \", jsonData.lastname)\r",
                "pm.test(\"Validar Apellido\", function(){\r",
                "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                "})\r",
                "\r",
                "console.log(\"Total Price: \", jsonData.totalprice)\r",
                "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                "})\r",
                "\r",
                "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                "pm.test(\"Validar Checkin\", function(){\r",
                "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                "})\r",
                "\r",
                "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                "pm.test(\"Validar Checkout\", function(){\r",
                "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                "})\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
            }
          }
        ]
      },
      {
        "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
        "name": "Modificar Reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "1"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token={{token}}"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "\r",
                "console.log(\"Respuesta JSON: \", jsonData)\r",
                "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                "\r",
                "pm.environment.set('ID', jsonData.bookingid);\r",
                "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                "\r",
                "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                "    \r",
                "});\r",
                "\r",
                "console.log(\"LastName: \", jsonData.lastname)\r",
                "pm.test(\"Validar Apellido\", function(){\r",
                "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                "})"
              ],
              "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
            }
          },
          {
            "listen": "prerequest",
            "script": {
              "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
              "type": "text/javascript",
              "exec": [
                "let getTokenRequest = {\r",
                "    method: 'POST',\r",
                "    url:'https://restful-booker.herokuapp.com/auth',\r",
                "    body:{\r",
                "        mode: 'urlencoded',\r",
                "        urlencoded:[\r",
                "            {key: 'username', value: 'admin'},\r",
                "            {key: 'password', value: 'password123'}\r",
                "        ]\r",
                "    }\r",
                "};\r",
                "console.log(\"Funcion: \",getTokenRequest)\r",
                "\r",
                "\r",
                "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                "{\r",
                "    console.log(\"Respuesta:\", response )\r",
                "    var jsonResponse = response.json(),\r",
                "    newToken = jsonResponse.token\r",
                "\r",
                "    pm.environment.set('token', newToken)\r",
                "    console.log(\"token: \", newToken)\r",
                "}\r",
                ");\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
            }
          }
        ]
      },
      {
        "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
        "name": "Generar Token",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "auth"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": true,
              "key": "Cookie",
              "value": "token=abc123"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "var jsonData = pm.response.json();\r",
                "console.log(\"Token: \", jsonData.token)\r",
                "\r",
                "pm.test (\"Validar token no vacio\", function() {\r",
                "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                "    \r",
                "});"
              ],
              "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
            }
          }
        ]
      },
      {
        "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
        "name": "Partial Update - arroja 400",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "20"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=4afd3c69fed5c9f"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
              "type": "text/javascript",
              "exec": [
                "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                "    pm.response.to.have.status(201); \r",
                "});\r",
                "\r",
                "pm.test(\"Probar response no vacio\", function(){\r",
                "        pm.response.to.be.withBody;\r",
                "        });\r",
                "\r",
                "\r",
                "console.log(\"Update Reserva partially\")\r",
                "console.log(pm.response)\r",
                "console.log(pm.response.code)\r",
                "console.log(pm.response.status)\r",
                "console.log(pm.response.responseTime)\r",
                "console.log(pm.response.responseText)"
              ],
              "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
            }
          }
        ]
      },
      {
        "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
        "name": "Delete Reserva",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "{{ID}}"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": true,
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token={{token}}"
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
              "type": "text/javascript",
              "exec": [
                "let getTokenRequest = {\r",
                "    method: 'POST',\r",
                "    url:'https://restful-booker.herokuapp.com/auth',\r",
                "    body:{\r",
                "        mode: 'urlencoded',\r",
                "        urlencoded:[\r",
                "            {key: 'username', value: 'admin'},\r",
                "            {key: 'password', value: 'password123'}\r",
                "        ]\r",
                "    }\r",
                "};\r",
                "console.log(\"Funcion: \",getTokenRequest)\r",
                "\r",
                "\r",
                "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                "{\r",
                "    console.log(\"Respuesta:\", response )\r",
                "    var jsonResponse = response.json(),\r",
                "    newToken = jsonResponse.token\r",
                "\r",
                "    pm.environment.set('token', newToken)\r",
                "    console.log(\"token: \", newToken)\r",
                "}\r",
                ");\r",
                "\r",
                "\r",
                ""
              ],
              "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 201\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(201)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})"
              ],
              "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
            }
          }
        ]
      },
      {
        "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
        "name": "Busqueda X Nombre",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "firs_tname",
                "value": "Daenerys"
              },
              {
                "key": "last_name",
                "value": "Targaryen"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Header: Content-Type\", function() {\r",
                "    pm.response.to.have.header(\"Content-Type\")\r",
                "});"
              ],
              "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
            }
          }
        ]
      },
      {
        "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
        "name": "Busqueda De Reservas X Fecha",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "disabled": true,
                "key": "firs_tname",
                "value": "Daenerys"
              },
              {
                "disabled": true,
                "key": "last_name",
                "value": "Targaryen"
              },
              {
                "key": "checkin",
                "value": "2020-01-01"
              },
              {
                "key": "checkout",
                "value": "2020-01-05"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Validar Estatus 200\", function() {\r",
                "    pm.expect(pm.response.code).to.equal(200)\r",
                "});\r",
                "\r",
                "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                "})\r",
                "\r",
                "pm.test(\"Validar Header: Content-Type\", function() {\r",
                "    pm.response.to.have.header(\"Content-Type\")\r",
                "});"
              ],
              "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
            }
          }
        ]
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
      "name": "Practica3",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "b2c7ea65-c6d8-495d-b7ea-6983c0cf2a71",
    "values": [
      {
        "type": "any",
        "value": "7fd299430d3814e",
        "key": "token"
      }
    ]
  },
  "globals": {
    "id": "c8951b20-f293-44fc-8726-639f00f57fb2",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 12,
        "pending": 0,
        "failed": 5
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 12,
        "pending": 0,
        "failed": 10
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 22,
        "pending": 0,
        "failed": 22
      },
      "testScripts": {
        "total": 10,
        "pending": 0,
        "failed": 5
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 87.91111111111111,
      "responseMin": 92,
      "responseMax": 437,
      "responseSd": 164.80936087522082,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1598083088143,
      "completed": 1598083089183
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651"
        },
        "item": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "ping"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b9dd0f7a-6567-4c7b-b888-698d94ecb0ba",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "395defd3-cb65-4bd5-816b-5122636c9684",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 201",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Prueba Codigo de Respuesta = 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Prueba Codigo de Respuesta = 201",
              "message": "expected undefined to equal 201",
              "stack": "AssertionError: expected undefined to equal 201\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:3:1)"
            }
          },
          {
            "assertion": "Validar Header: Content-Type",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 3,
              "test": "Validar Header: Content-Type",
              "message": "expected response to have header with key 'Content-Type'",
              "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:4:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "9a915540-ba24-442b-a880-b3abd1e74c0b",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b9de8fe3-05e9-48a6-8c45-1c1114e6629c"
        },
        "item": {
          "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
          "name": "Ver Reservas Existentes",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData =pm.response.json()\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "\t});\r",
                  "\r",
                  "pm.test (\"Validar que exista Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                  "    pm.response.to.be.json;\r",
                  "    })\r",
                  "\r",
                  "pm.test (\"Validar Texto\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                  "});\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                  "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4d9ffb65-02a9-49b7-a45e-904696f30d94",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "66fb838b-c70a-4453-98ec-88420f60a618",
              "timestamp": 1598083088283,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "47223674-7994-4af8-887e-a70dca1f19a6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e8655e62-aaa6-4ce5-81cc-d2600ad676e0"
        },
        "item": {
          "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
          "name": "Crear Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a70e425a-eb76-4467-9a1e-dc73f6dac95c",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Codigo de Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Codigo de Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "a19b9e49-08ee-48a3-8bea-85b1d1970bf5",
              "timestamp": 1598083088311,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "90b89c9e-6714-4dc2-afaf-3ee9cf1b9819",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a32b12c8-da88-4b9f-80c5-45132ace6df1"
        },
        "item": {
          "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
          "name": "Ver Reservacion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json()\r",
                  "console.log(\"Nombre: \", jsonData.firstname)\r",
                  "\r",
                  "pm.test(\"Validar Nombre\", function(){\r",
                  "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Total Price: \", jsonData.totalprice)\r",
                  "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                  "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                  "pm.test(\"Validar Checkin\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                  "pm.test(\"Validar Checkout\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "%7B%7BID%7D%7D"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "65e36a6a-c4c1-4de3-9923-d581e20abf66",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "00a3c9e1-613b-4237-ab9a-7308b14b36b7",
              "timestamp": 1598083088341,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68"
        },
        "item": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "1"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=fa773b39767ab78"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c5c219d0-402a-4c82-a41b-3821baad992a",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "bc2cc9f8-54ae-4c1f-87d7-4bf2afae97f9",
              "timestamp": 1598083088867,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68"
        },
        "item": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "1"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=fa773b39767ab78"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c5c219d0-402a-4c82-a41b-3821baad992a",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "bc2cc9f8-54ae-4c1f-87d7-4bf2afae97f9",
              "timestamp": 1598083088867,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cd69bc7e-a47c-4d0f-9c45-ac5aa92e2052",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5649c541-0a92-4bb2-b395-7c8516838607"
        },
        "item": {
          "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
          "name": "Generar Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Cookie",
                "value": "token=abc123"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Token: \", jsonData.token)\r",
                  "\r",
                  "pm.test (\"Validar token no vacio\", function() {\r",
                  "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});"
                ],
                "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "auth"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": true,
              "key": "Cookie",
              "value": "token=abc123"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b7a454d4-88c6-4277-a23a-e6d2047d1f75",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus de Respuesta 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus de Respuesta 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "JSONError",
              "message": "Unexpected token u in JSON at position 0",
              "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
              "id": "a4368e49-c534-4247-93ce-3251ae94383b",
              "timestamp": 1598083088899,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "00f7a360-0938-484f-8860-e7b4089402c7",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a6b9f4e4-91c1-48b1-a64e-c70e36ffe5ec"
        },
        "item": {
          "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
          "name": "Partial Update - arroja 400",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "20"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=4afd3c69fed5c9f"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                "type": "text/javascript",
                "exec": [
                  "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                  "    pm.response.to.have.status(201); \r",
                  "});\r",
                  "\r",
                  "pm.test(\"Probar response no vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "\r",
                  "\r",
                  "console.log(\"Update Reserva partially\")\r",
                  "console.log(pm.response)\r",
                  "console.log(pm.response.code)\r",
                  "console.log(pm.response.status)\r",
                  "console.log(pm.response.responseTime)\r",
                  "console.log(pm.response.responseText)"
                ],
                "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "20"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=4afd3c69fed5c9f"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "892e34be-3240-4289-a6de-02561ff6bbbb",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Probar el estado de respuesta 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Probar el estado de respuesta 201",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:7)"
            }
          },
          {
            "assertion": "Probar response no vacio",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Probar response no vacio",
              "message": "expected response to have content in body",
              "stack": "AssertionError: expected response to have content in body\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0072b2e7-70e5-4f34-b493-20af01287b46",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e93971a-ff08-4d24-acbe-80696c5c8a6a"
        },
        "item": {
          "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
          "name": "Delete Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})"
                ],
                "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "%7B%7BID%7D%7D"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": true,
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=7fd299430d3814e"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e9dd2e51-4ac3-4ce1-a220-82b100547079",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 201",
              "message": "expected undefined to equal 201",
              "stack": "AssertionError: expected undefined to equal 201\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0072b2e7-70e5-4f34-b493-20af01287b46",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e93971a-ff08-4d24-acbe-80696c5c8a6a"
        },
        "item": {
          "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
          "name": "Delete Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})"
                ],
                "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              "%7B%7BID%7D%7D"
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "disabled": true,
              "key": "Accept",
              "value": "application/json"
            },
            {
              "key": "Cookie",
              "value": "token=7fd299430d3814e"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e9dd2e51-4ac3-4ce1-a220-82b100547079",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 201",
              "message": "expected undefined to equal 201",
              "stack": "AssertionError: expected undefined to equal 201\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4bf50a56-c8d4-422d-9362-3471ee90c09b",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce66e9ac-1d52-4f02-8906-1945ef679d95"
        },
        "item": {
          "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
          "name": "Busqueda X Nombre",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "key": "last_name",
                  "value": "Targaryen"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "firs_tname",
                "value": "Daenerys"
              },
              {
                "key": "last_name",
                "value": "Targaryen"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95fb4905-0186-417a-85f1-c27950f4048b",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:9)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:9)"
            }
          },
          {
            "assertion": "Validar Header: Content-Type",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Validar Header: Content-Type",
              "message": "expected response to have header with key 'Content-Type'",
              "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:3:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b7929038-a57e-4430-8781-378df92068a8",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb2b176-028a-4f4f-bb0e-fdea9fce1f6c"
        },
        "item": {
          "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
          "name": "Busqueda De Reservas X Fecha",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "disabled": true,
                  "key": "last_name",
                  "value": "Targaryen"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-01"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-05"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "booking",
              ""
            ],
            "host": [
              "{{url_base}}"
            ],
            "query": [
              {
                "key": "checkin",
                "value": "2020-01-01"
              },
              {
                "key": "checkout",
                "value": "2020-01-05"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6fdbab43-48fb-4313-8287-cf7eeee8796e",
              "system": true
            },
            {
              "key": "Host",
              "value": "{{url_base}}",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
        "requestError": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}"
        },
        "assertions": [
          {
            "assertion": "Validar Estatus 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Validar Estatus 200",
              "message": "expected undefined to equal 200",
              "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:10)"
            }
          },
          {
            "assertion": "Tiempo de Respuesta Menor a 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Tiempo de Respuesta Menor a 500ms",
              "message": "expected undefined to be a number or a date",
              "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:10)"
            }
          },
          {
            "assertion": "Validar Header: Content-Type",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Validar Header: Content-Type",
              "message": "expected response to have header with key 'Content-Type'",
              "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:3:10)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 54
    },
    "failures": [
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "74fa1cbb-787f-485c-8a0e-c18c3c5ce32e",
          "timestamp": 1598083088200,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 201",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "a4c9d73e3eac88494bf75ba1ec4a3c9e",
          "id": "876b3f3a-7e9f-4e6b-b417-c2cbfd50a650",
          "timestamp": 1598083088228,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651",
          "scriptId": "967a2453-06ea-4ce9-9931-f38bf08b3189",
          "execution": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Prueba Codigo de Respuesta = 201",
          "message": "expected undefined to equal 201",
          "stack": "AssertionError: expected undefined to equal 201\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "38c1f848dec369ecf2e983147bc386b3",
          "id": "c76b0059-5491-478a-9308-66cbdd9f7b4f",
          "timestamp": 1598083088231,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651",
          "scriptId": "967a2453-06ea-4ce9-9931-f38bf08b3189",
          "execution": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "57951b461c245b6bee520c85b2b4e0a6",
          "id": "c45dc474-13b7-4b8a-b7e4-f0352c255726",
          "timestamp": 1598083088233,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651",
          "scriptId": "967a2453-06ea-4ce9-9931-f38bf08b3189",
          "execution": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 3,
          "test": "Validar Header: Content-Type",
          "message": "expected response to have header with key 'Content-Type'",
          "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:4:1)",
          "checksum": "b3202335a045c704c292f0e78fa0d83a",
          "id": "e07542ce-2dd2-4aac-b0e4-c1e30a2f4d89",
          "timestamp": 1598083088235,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 4,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:3 in test-script",
        "source": {
          "id": "395defd3-cb65-4bd5-816b-5122636c9684",
          "name": "Health Check",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "ping"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.response.to.have.status(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                  "console.log(\"Respuesta: \", pm.response)\r",
                  "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                  "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                  "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                  "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                  "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                  "console.log(\"Header: \", pm.response.headers)\r",
                  ""
                ],
                "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9d43b4a5-e452-463b-b379-92fe88906da1",
          "httpRequestId": "128ac32f-3d28-45e6-b857-aa0c2198d651",
          "scriptId": "967a2453-06ea-4ce9-9931-f38bf08b3189",
          "execution": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "e4333186-7e52-4174-901e-02a20cf8732a",
          "timestamp": 1598083088273,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
          "name": "Ver Reservas Existentes",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData =pm.response.json()\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "\t});\r",
                  "\r",
                  "pm.test (\"Validar que exista Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                  "    pm.response.to.be.json;\r",
                  "    })\r",
                  "\r",
                  "pm.test (\"Validar Texto\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                  "});\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                  "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "9a915540-ba24-442b-a880-b3abd1e74c0b",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b9de8fe3-05e9-48a6-8c45-1c1114e6629c"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "66fb838b-c70a-4453-98ec-88420f60a618",
          "timestamp": 1598083088283,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
          "name": "Ver Reservas Existentes",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                "type": "text/javascript",
                "exec": [
                  "var jsonData =pm.response.json()\r",
                  "\r",
                  "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                  "    pm.response.to.have.body;\r",
                  "})\r",
                  "\r",
                  "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                  "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                  "\t});\r",
                  "\r",
                  "pm.test (\"Validar que exista Content-Type\", function() \r",
                  "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                  "\r",
                  "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                  "    pm.response.to.be.json;\r",
                  "    })\r",
                  "\r",
                  "pm.test (\"Validar Texto\", function() {\r",
                  "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                  "});\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                  "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "9a915540-ba24-442b-a880-b3abd1e74c0b",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b9de8fe3-05e9-48a6-8c45-1c1114e6629c",
          "scriptId": "f4937ebc-2f06-44bc-930d-85166d792fcb"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "d41e51f7-1b4e-4440-922b-955a350dd9d5",
          "timestamp": 1598083088300,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
          "name": "Crear Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "47223674-7994-4af8-887e-a70dca1f19a6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e8655e62-aaa6-4ce5-81cc-d2600ad676e0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Codigo de Estatus 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "262d5adb86f0cdb0e96d1008224fcce3",
          "id": "0eff90be-cc70-48a7-a13e-162609d2217c",
          "timestamp": 1598083088307,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
          "name": "Crear Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "47223674-7994-4af8-887e-a70dca1f19a6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e8655e62-aaa6-4ce5-81cc-d2600ad676e0",
          "scriptId": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
          "execution": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "aceeb7d89e52a4a2d051967d12eaf517",
          "id": "32e69e14-8e46-4531-984a-98528653d18b",
          "timestamp": 1598083088309,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
          "name": "Crear Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "47223674-7994-4af8-887e-a70dca1f19a6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e8655e62-aaa6-4ce5-81cc-d2600ad676e0",
          "scriptId": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
          "execution": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "a19b9e49-08ee-48a3-8bea-85b1d1970bf5",
          "timestamp": 1598083088311,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
          "name": "Crear Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "47223674-7994-4af8-887e-a70dca1f19a6",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e8655e62-aaa6-4ce5-81cc-d2600ad676e0",
          "scriptId": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "f5f1fcab-4c85-48db-b38a-63e9d6a0fc9e",
          "timestamp": 1598083088330,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
          "name": "Ver Reservacion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json()\r",
                  "console.log(\"Nombre: \", jsonData.firstname)\r",
                  "\r",
                  "pm.test(\"Validar Nombre\", function(){\r",
                  "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Total Price: \", jsonData.totalprice)\r",
                  "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                  "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                  "pm.test(\"Validar Checkin\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                  "pm.test(\"Validar Checkout\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "90b89c9e-6714-4dc2-afaf-3ee9cf1b9819",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a32b12c8-da88-4b9f-80c5-45132ace6df1"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "732237ccbf3917a2e9bf0a79da5c772e",
          "id": "1c9f9475-5742-43cc-b795-7ef0808018ac",
          "timestamp": 1598083088337,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
          "name": "Ver Reservacion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json()\r",
                  "console.log(\"Nombre: \", jsonData.firstname)\r",
                  "\r",
                  "pm.test(\"Validar Nombre\", function(){\r",
                  "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Total Price: \", jsonData.totalprice)\r",
                  "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                  "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                  "pm.test(\"Validar Checkin\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                  "pm.test(\"Validar Checkout\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "90b89c9e-6714-4dc2-afaf-3ee9cf1b9819",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a32b12c8-da88-4b9f-80c5-45132ace6df1",
          "scriptId": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
          "execution": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "8fb363f0711062ffadd95c659bfeec06",
          "id": "be1a2e91-0091-4dd6-80b8-da12c6f0411b",
          "timestamp": 1598083088338,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
          "name": "Ver Reservacion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json()\r",
                  "console.log(\"Nombre: \", jsonData.firstname)\r",
                  "\r",
                  "pm.test(\"Validar Nombre\", function(){\r",
                  "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Total Price: \", jsonData.totalprice)\r",
                  "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                  "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                  "pm.test(\"Validar Checkin\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                  "pm.test(\"Validar Checkout\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "90b89c9e-6714-4dc2-afaf-3ee9cf1b9819",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a32b12c8-da88-4b9f-80c5-45132ace6df1",
          "scriptId": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
          "execution": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "00a3c9e1-613b-4237-ab9a-7308b14b36b7",
          "timestamp": 1598083088341,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
          "name": "Ver Reservacion",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json()\r",
                  "console.log(\"Nombre: \", jsonData.firstname)\r",
                  "\r",
                  "pm.test(\"Validar Nombre\", function(){\r",
                  "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Total Price: \", jsonData.totalprice)\r",
                  "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                  "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                  "pm.test(\"Validar Checkin\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                  "})\r",
                  "\r",
                  "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                  "pm.test(\"Validar Checkout\", function(){\r",
                  "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                  "})\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "90b89c9e-6714-4dc2-afaf-3ee9cf1b9819",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a32b12c8-da88-4b9f-80c5-45132ace6df1",
          "scriptId": "1029de28-eeb1-4a1a-8844-cc282135ebd3"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "2d264eb9-f81a-4219-b8ca-f459a66326ca",
          "timestamp": 1598083088851,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "028c055052c1e211add60793b6b26318",
          "id": "8ac342c9-3707-4501-94d3-97436d8a469f",
          "timestamp": 1598083088862,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68",
          "scriptId": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
          "execution": "21af2409-7442-4f4f-932a-ad4a7583558e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "d1b4ac7dc4456ccc7066b8ed25a2f24d",
          "id": "4b58ae53-cff9-4597-aee5-3be7d1468252",
          "timestamp": 1598083088865,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68",
          "scriptId": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
          "execution": "21af2409-7442-4f4f-932a-ad4a7583558e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "bc2cc9f8-54ae-4c1f-87d7-4bf2afae97f9",
          "timestamp": 1598083088867,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
          "name": "Modificar Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "1"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "\r",
                  "console.log(\"Respuesta JSON: \", jsonData)\r",
                  "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                  "\r",
                  "pm.environment.set('ID', jsonData.bookingid);\r",
                  "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                  "\r",
                  "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                  "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});\r",
                  "\r",
                  "console.log(\"LastName: \", jsonData.lastname)\r",
                  "pm.test(\"Validar Apellido\", function(){\r",
                  "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                  "})"
                ],
                "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0a67eea4-ab98-43c1-9041-0f9c0c3a7cf0",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53c4ecad-a42e-4222-9514-0c88c0e97b68",
          "scriptId": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "8930b15c-cc36-46be-a55a-40b91ec3bf84",
          "timestamp": 1598083088886,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
          "name": "Generar Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Cookie",
                "value": "token=abc123"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Token: \", jsonData.token)\r",
                  "\r",
                  "pm.test (\"Validar token no vacio\", function() {\r",
                  "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});"
                ],
                "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cd69bc7e-a47c-4d0f-9c45-ac5aa92e2052",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5649c541-0a92-4bb2-b395-7c8516838607"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus de Respuesta 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "a2ec63dc6f2e070ee1b82920cf5be917",
          "id": "9144d06e-caa3-4a42-a209-e36db829e50b",
          "timestamp": 1598083088895,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
          "name": "Generar Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Cookie",
                "value": "token=abc123"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Token: \", jsonData.token)\r",
                  "\r",
                  "pm.test (\"Validar token no vacio\", function() {\r",
                  "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});"
                ],
                "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cd69bc7e-a47c-4d0f-9c45-ac5aa92e2052",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5649c541-0a92-4bb2-b395-7c8516838607",
          "scriptId": "174031ed-2a8c-49b8-8099-e1ba688932f4",
          "execution": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "dbea56b769b83433446c4415e90bfa95",
          "id": "da13919f-3470-4d78-8d00-076d9e7a3e0b",
          "timestamp": 1598083088897,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
          "name": "Generar Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Cookie",
                "value": "token=abc123"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Token: \", jsonData.token)\r",
                  "\r",
                  "pm.test (\"Validar token no vacio\", function() {\r",
                  "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});"
                ],
                "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cd69bc7e-a47c-4d0f-9c45-ac5aa92e2052",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5649c541-0a92-4bb2-b395-7c8516838607",
          "scriptId": "174031ed-2a8c-49b8-8099-e1ba688932f4",
          "execution": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "JSONError",
          "message": "Unexpected token u in JSON at position 0",
          "checksum": "674c73b0a2e196398fc4e0c640dd47ed",
          "id": "a4368e49-c534-4247-93ce-3251ae94383b",
          "timestamp": 1598083088899,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
          "name": "Generar Token",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "auth"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Cookie",
                "value": "token=abc123"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "var jsonData = pm.response.json();\r",
                  "console.log(\"Token: \", jsonData.token)\r",
                  "\r",
                  "pm.test (\"Validar token no vacio\", function() {\r",
                  "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                  "    \r",
                  "});"
                ],
                "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "cd69bc7e-a47c-4d0f-9c45-ac5aa92e2052",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5649c541-0a92-4bb2-b395-7c8516838607",
          "scriptId": "174031ed-2a8c-49b8-8099-e1ba688932f4"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "1b7715de-d160-4db4-be86-d9ca89327044",
          "timestamp": 1598083088920,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
          "name": "Partial Update - arroja 400",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "20"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=4afd3c69fed5c9f"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                "type": "text/javascript",
                "exec": [
                  "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                  "    pm.response.to.have.status(201); \r",
                  "});\r",
                  "\r",
                  "pm.test(\"Probar response no vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "\r",
                  "\r",
                  "console.log(\"Update Reserva partially\")\r",
                  "console.log(pm.response)\r",
                  "console.log(pm.response.code)\r",
                  "console.log(pm.response.status)\r",
                  "console.log(pm.response.responseTime)\r",
                  "console.log(pm.response.responseText)"
                ],
                "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "00f7a360-0938-484f-8860-e7b4089402c7",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a6b9f4e4-91c1-48b1-a64e-c70e36ffe5ec"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Probar el estado de respuesta 201",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "aba8b2162a9816ce1eaa43406cce2651",
          "id": "0343f1d0-3d9a-4f1c-9a69-73a3e78b643f",
          "timestamp": 1598083088930,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
          "name": "Partial Update - arroja 400",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "20"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=4afd3c69fed5c9f"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                "type": "text/javascript",
                "exec": [
                  "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                  "    pm.response.to.have.status(201); \r",
                  "});\r",
                  "\r",
                  "pm.test(\"Probar response no vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "\r",
                  "\r",
                  "console.log(\"Update Reserva partially\")\r",
                  "console.log(pm.response)\r",
                  "console.log(pm.response.code)\r",
                  "console.log(pm.response.status)\r",
                  "console.log(pm.response.responseTime)\r",
                  "console.log(pm.response.responseText)"
                ],
                "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "00f7a360-0938-484f-8860-e7b4089402c7",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a6b9f4e4-91c1-48b1-a64e-c70e36ffe5ec",
          "scriptId": "aaca971f-abaf-4470-be29-e16171c7f19f",
          "execution": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Probar response no vacio",
          "message": "expected response to have content in body",
          "stack": "AssertionError: expected response to have content in body\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "a1b265e652e98391f753998af4431587",
          "id": "caf886a7-a57e-4fff-8437-aa245a2fdd02",
          "timestamp": 1598083088932,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
          "name": "Partial Update - arroja 400",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "20"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token=4afd3c69fed5c9f"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                "type": "text/javascript",
                "exec": [
                  "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                  "    pm.response.to.have.status(201); \r",
                  "});\r",
                  "\r",
                  "pm.test(\"Probar response no vacio\", function(){\r",
                  "        pm.response.to.be.withBody;\r",
                  "        });\r",
                  "\r",
                  "\r",
                  "console.log(\"Update Reserva partially\")\r",
                  "console.log(pm.response)\r",
                  "console.log(pm.response.code)\r",
                  "console.log(pm.response.status)\r",
                  "console.log(pm.response.responseTime)\r",
                  "console.log(pm.response.responseText)"
                ],
                "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "00f7a360-0938-484f-8860-e7b4089402c7",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a6b9f4e4-91c1-48b1-a64e-c70e36ffe5ec",
          "scriptId": "aaca971f-abaf-4470-be29-e16171c7f19f",
          "execution": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "654147a9-cda9-4735-aec9-f84ee94d02e2",
          "timestamp": 1598083089108,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
          "name": "Delete Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})"
                ],
                "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0072b2e7-70e5-4f34-b493-20af01287b46",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e93971a-ff08-4d24-acbe-80696c5c8a6a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 201",
          "message": "expected undefined to equal 201",
          "stack": "AssertionError: expected undefined to equal 201\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "0ac4d3d9990db1d1a9876810225861b3",
          "id": "45cf8f45-fa6b-4d62-9929-365a9f038ca9",
          "timestamp": 1598083089116,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
          "name": "Delete Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})"
                ],
                "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0072b2e7-70e5-4f34-b493-20af01287b46",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e93971a-ff08-4d24-acbe-80696c5c8a6a",
          "scriptId": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
          "execution": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "aacb3de6119bb8fa609e76686d615c25",
          "id": "d339cafb-a007-44c0-bdf1-d10036214212",
          "timestamp": 1598083089118,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
          "name": "Delete Reserva",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                "{{ID}}"
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "disabled": true,
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "token={{token}}"
              }
            ],
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                "type": "text/javascript",
                "exec": [
                  "let getTokenRequest = {\r",
                  "    method: 'POST',\r",
                  "    url:'https://restful-booker.herokuapp.com/auth',\r",
                  "    body:{\r",
                  "        mode: 'urlencoded',\r",
                  "        urlencoded:[\r",
                  "            {key: 'username', value: 'admin'},\r",
                  "            {key: 'password', value: 'password123'}\r",
                  "        ]\r",
                  "    }\r",
                  "};\r",
                  "console.log(\"Funcion: \",getTokenRequest)\r",
                  "\r",
                  "\r",
                  "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                  "{\r",
                  "    console.log(\"Respuesta:\", response )\r",
                  "    var jsonResponse = response.json(),\r",
                  "    newToken = jsonResponse.token\r",
                  "\r",
                  "    pm.environment.set('token', newToken)\r",
                  "    console.log(\"token: \", newToken)\r",
                  "}\r",
                  ");\r",
                  "\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 201\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(201)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})"
                ],
                "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "0072b2e7-70e5-4f34-b493-20af01287b46",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2e93971a-ff08-4d24-acbe-80696c5c8a6a",
          "scriptId": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
          "execution": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "013939b9-3d20-4ba8-9a2d-1dade66a8216",
          "timestamp": 1598083089138,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
          "name": "Busqueda X Nombre",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "key": "last_name",
                  "value": "Targaryen"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4bf50a56-c8d4-422d-9362-3471ee90c09b",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce66e9ac-1d52-4f02-8906-1945ef679d95"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "a1f99075343e37b4b39d45c61be5176c",
          "id": "746e8c1d-f5fd-40d9-b589-4426e2809659",
          "timestamp": 1598083089147,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
          "name": "Busqueda X Nombre",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "key": "last_name",
                  "value": "Targaryen"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4bf50a56-c8d4-422d-9362-3471ee90c09b",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce66e9ac-1d52-4f02-8906-1945ef679d95",
          "scriptId": "5e46723b-0620-4737-889d-2425d38e1ac5",
          "execution": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "75492921709faada7b664914f785c8b9",
          "id": "b150ca93-f25b-4b8a-881b-f0b1d81bae04",
          "timestamp": 1598083089148,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
          "name": "Busqueda X Nombre",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "key": "last_name",
                  "value": "Targaryen"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4bf50a56-c8d4-422d-9362-3471ee90c09b",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce66e9ac-1d52-4f02-8906-1945ef679d95",
          "scriptId": "5e46723b-0620-4737-889d-2425d38e1ac5",
          "execution": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Validar Header: Content-Type",
          "message": "expected response to have header with key 'Content-Type'",
          "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:3:9)",
          "checksum": "17d2411de9ccf9d9cd2f2747fa34831b",
          "id": "b64cfcf3-e25a-4bc6-9d1f-e4f41701485d",
          "timestamp": 1598083089151,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
          "name": "Busqueda X Nombre",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "key": "last_name",
                  "value": "Targaryen"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "4bf50a56-c8d4-422d-9362-3471ee90c09b",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ce66e9ac-1d52-4f02-8906-1945ef679d95",
          "scriptId": "5e46723b-0620-4737-889d-2425d38e1ac5",
          "execution": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
        }
      },
      {
        "error": {
          "errno": "ENOTFOUND",
          "code": "ENOTFOUND",
          "syscall": "getaddrinfo",
          "hostname": "{{url_base}}",
          "name": "Error",
          "message": "getaddrinfo ENOTFOUND {{url_base}}",
          "stack": "Error: getaddrinfo ENOTFOUND {{url_base}}\n    at GetAddrInfoReqWrap.onlookup [as oncomplete] (dns.js:66:26)",
          "checksum": "b9dbc472453d1ee0f68ab46a4261e7bf",
          "id": "296e5abb-295c-4a8b-87c2-8bf2c8f639c9",
          "timestamp": 1598083089165,
          "stacktrace": [
            {
              "fileName": "dns.js",
              "lineNumber": 66,
              "functionName": "GetAddrInfoReqWrap.onlookup [as oncomplete]",
              "typeName": "GetAddrInfoReqWrap",
              "methodName": "onlookup [as oncomplete]",
              "columnNumber": 26,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
          "name": "Busqueda De Reservas X Fecha",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "disabled": true,
                  "key": "last_name",
                  "value": "Targaryen"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-01"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-05"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b7929038-a57e-4430-8781-378df92068a8",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb2b176-028a-4f4f-bb0e-fdea9fce1f6c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Validar Estatus 200",
          "message": "expected undefined to equal 200",
          "stack": "AssertionError: expected undefined to equal 200\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "e369ad868cbe0333ef71610defb7868a",
          "id": "c8f8e5d7-cdba-431c-904f-5ee73762b720",
          "timestamp": 1598083089171,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
          "name": "Busqueda De Reservas X Fecha",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "disabled": true,
                  "key": "last_name",
                  "value": "Targaryen"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-01"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-05"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b7929038-a57e-4430-8781-378df92068a8",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb2b176-028a-4f4f-bb0e-fdea9fce1f6c",
          "scriptId": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
          "execution": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Tiempo de Respuesta Menor a 500ms",
          "message": "expected undefined to be a number or a date",
          "stack": "AssertionError: expected undefined to be a number or a date\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "77d55920f43ec3c8a9a26cd081ebe736",
          "id": "f35ee3b8-022b-432c-8358-f1a2c1cc72c1",
          "timestamp": 1598083089174,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
          "name": "Busqueda De Reservas X Fecha",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "disabled": true,
                  "key": "last_name",
                  "value": "Targaryen"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-01"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-05"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b7929038-a57e-4430-8781-378df92068a8",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb2b176-028a-4f4f-bb0e-fdea9fce1f6c",
          "scriptId": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
          "execution": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Validar Header: Content-Type",
          "message": "expected response to have header with key 'Content-Type'",
          "stack": "AssertionError: expected response to have header with key 'Content-Type'\n   at Object.eval sandbox-script.js:3:10)",
          "checksum": "ba423dd7ae9485f9f22b31a330d0c0f2",
          "id": "fdfdf8e2-1062-4dc1-80aa-3ba1d035469d",
          "timestamp": 1598083089176,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
          "name": "Busqueda De Reservas X Fecha",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "booking",
                ""
              ],
              "host": [
                "{{url_base}}"
              ],
              "query": [
                {
                  "disabled": true,
                  "key": "firs_tname",
                  "value": "Daenerys"
                },
                {
                  "disabled": true,
                  "key": "last_name",
                  "value": "Targaryen"
                },
                {
                  "key": "checkin",
                  "value": "2020-01-01"
                },
                {
                  "key": "checkout",
                  "value": "2020-01-05"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Validar Estatus 200\", function() {\r",
                  "    pm.expect(pm.response.code).to.equal(200)\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "})\r",
                  "\r",
                  "pm.test(\"Validar Header: Content-Type\", function() {\r",
                  "    pm.response.to.have.header(\"Content-Type\")\r",
                  "});"
                ],
                "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb"
          },
          "item": [
            {
              "id": "395defd3-cb65-4bd5-816b-5122636c9684",
              "name": "Health Check",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "ping"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "967a2453-06ea-4ce9-9931-f38bf08b3189",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.response.to.have.status(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Prueba Codigo de Respuesta = 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"*** Impresion de Respuestas de JSON ***\")\r",
                      "console.log(\"Respuesta: \", pm.response)\r",
                      "console.log(\"Codigo de Respuesta: \", pm.response.code)\r",
                      "console.log(\"Estado de Respuesta: \", pm.response.status)\r",
                      "console.log(\"Tiempo de Respuesta: \", pm.response.responseTime)\r",
                      "console.log(\"Cuerpo de Respuesta: \", pm.response.text)\r",
                      "console.log(\"Tamanio de Respuesta\", pm.response.responseSize)\r",
                      "console.log(\"Header: \", pm.response.headers)\r",
                      ""
                    ],
                    "_lastExecutionId": "e8d2db72-9372-44d3-89c6-72b3a220abd8"
                  }
                }
              ]
            },
            {
              "id": "5ad988e3-e20f-43df-97ba-a6883bc7fb7e",
              "name": "Ver Reservas Existentes",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4937ebc-2f06-44bc-930d-85166d792fcb",
                    "type": "text/javascript",
                    "exec": [
                      "var jsonData =pm.response.json()\r",
                      "\r",
                      "pm.test(\"Validar Respuesta No Vacia\", function() {\r",
                      "    pm.response.to.have.body;\r",
                      "})\r",
                      "\r",
                      "pm.test (\"Response Time Is Less Thank 500ms\", function() { \r",
                      "\tpm.expect(pm.response.responseTime).to.below(500); \r",
                      "\t});\r",
                      "\r",
                      "pm.test (\"Validar que exista Content-Type\", function() \r",
                      "    { pm.response.to.have.header(\"Content-Type\"); });\r",
                      "\r",
                      "pm.test(\"Validar que respuesta sea Json\", function () {\r",
                      "    pm.response.to.be.json;\r",
                      "    })\r",
                      "\r",
                      "pm.test (\"Validar Texto\", function() {\r",
                      "    pm.expect(pm.response.text()).to.include(\"bookingid\"); \r",
                      "});\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData[0].bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData) //revisar consola para checar como esta definido el valor, arreglos como en este caso\r",
                      "console.log(\"ID de Reservacion: \", jsonData[0].bookingid) //se define del arreglo ..\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "b2a5af16-19f0-4b8b-8420-47cfe041439b"
                  }
                }
              ]
            },
            {
              "id": "36cec6aa-0afc-4f9e-9fc5-98fb1445a41b",
              "name": "Crear Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"Daenerys\",\r\n    \"lastname\" : \"Targaryen\",\r\n    \"totalprice\" : \"201\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-01\",\r\n        \"checkout\" : \"2020-01-05\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1bcf31a7-d6db-4df0-8ea5-c908b2b63379",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Codigo de Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "8c0ee92e-9c0b-4400-8d18-78e414725a23"
                  }
                }
              ]
            },
            {
              "id": "0a634727-ca9c-42d4-ac8c-b73655bf7bc6",
              "name": "Ver Reservacion",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1029de28-eeb1-4a1a-8844-cc282135ebd3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json()\r",
                      "console.log(\"Nombre: \", jsonData.firstname)\r",
                      "\r",
                      "pm.test(\"Validar Nombre\", function(){\r",
                      "    pm.expect(jsonData.firstname).to.be.equal(\"Daenerys\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"Targaryen\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Total Price: \", jsonData.totalprice)\r",
                      "pm.test(\"Validar Precio Total de la Reservacion\", function(){\r",
                      "  pm.expect(jsonData.totalprice).to.be.equal(201)\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Checkin: \", jsonData.bookingdates.checkin)\r",
                      "pm.test(\"Validar Checkin\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkin).to.be.equal(\"2020-01-01\")\r",
                      "})\r",
                      "\r",
                      "console.log(\"Validar Chekout: \", jsonData.bookingdates.checkout)\r",
                      "pm.test(\"Validar Checkout\", function(){\r",
                      "  pm.expect(jsonData.bookingdates.checkout).to.be.equal(\"2020-01-05\")\r",
                      "})\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "c329e00b-7ea4-41c0-9916-6caa8e8ca6b7"
                  }
                }
              ]
            },
            {
              "id": "88761cd8-5243-4e03-a5ca-feea2d17e4a7",
              "name": "Modificar Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "1"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "disabled": true,
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"DaenerysChange\",\r\n    \"lastname\" : \"TargaryenChange\",\r\n    \"totalprice\" : \"202\",\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : \r\n    {\r\n        \"checkin\" : \"2020-01-02\",\r\n        \"checkout\" : \"2020-01-06\"\r\n    },\r\n    \"additionalneeds\" : \"Dinner\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f310ab45-64b8-40ca-acf6-bff3fa7f93d7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "\r",
                      "console.log(\"Respuesta JSON: \", jsonData)\r",
                      "console.log(\"ID de Reservacion: \", jsonData.bookingid)\r",
                      "\r",
                      "pm.environment.set('ID', jsonData.bookingid);\r",
                      "postman.setEnvironmentVariable('ID2', jsonData.bookingid);\r",
                      "\r",
                      "pm.test (\"Validar no recibir respuesta undefinded para bookingid\", function() {\r",
                      "    pm.expect(jsonData.bookingid).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});\r",
                      "\r",
                      "console.log(\"LastName: \", jsonData.lastname)\r",
                      "pm.test(\"Validar Apellido\", function(){\r",
                      "   pm.expect(jsonData.lastname).to.be.equal(\"TargaryenChange\")\r",
                      "})"
                    ],
                    "_lastExecutionId": "21af2409-7442-4f4f-932a-ad4a7583558e"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "7a1ad62c-6d7c-40b5-b601-b0c6442b6731",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "613c7cd8-4bfb-42d2-84ac-f077aebae758"
                  }
                }
              ]
            },
            {
              "id": "c709ffc1-c577-46f9-83c1-3a4559b7f240",
              "name": "Generar Token",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Cookie",
                    "value": "token=abc123"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}\r\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "174031ed-2a8c-49b8-8099-e1ba688932f4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus de Respuesta 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "var jsonData = pm.response.json();\r",
                      "console.log(\"Token: \", jsonData.token)\r",
                      "\r",
                      "pm.test (\"Validar token no vacio\", function() {\r",
                      "    pm.expect(jsonData.token).not.eq(\"undefinded\"); \r",
                      "    \r",
                      "});"
                    ],
                    "_lastExecutionId": "9dd45aeb-edb3-4f5f-a60f-159f43c06bbf"
                  }
                }
              ]
            },
            {
              "id": "9bc3858d-8ef4-4f43-8d95-ecc8b329bb1d",
              "name": "Partial Update - arroja 400",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "20"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token=4afd3c69fed5c9f"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstname\" : \"JohnChanged\",\r\n    \"lastname\" : \"SnowChanged\"\r\n\r\n   // \"totalprice\" : \"202\",\r\n   // \"depositpaid\" : true,\r\n //  \"bookingdates\" : \r\n  //  {\r\n //       \"checkin\" : \"2020-01-02\",\r\n  //      \"checkout\" : \"2020-01-07\"\r\n  //  },\r\n  //  \"additionalneeds\" : \"Dinner\"\r\n\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aaca971f-abaf-4470-be29-e16171c7f19f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test (\"Probar el estado de respuesta 201\", function() {\r",
                      "    pm.response.to.have.status(201); \r",
                      "});\r",
                      "\r",
                      "pm.test(\"Probar response no vacio\", function(){\r",
                      "        pm.response.to.be.withBody;\r",
                      "        });\r",
                      "\r",
                      "\r",
                      "console.log(\"Update Reserva partially\")\r",
                      "console.log(pm.response)\r",
                      "console.log(pm.response.code)\r",
                      "console.log(pm.response.status)\r",
                      "console.log(pm.response.responseTime)\r",
                      "console.log(pm.response.responseText)"
                    ],
                    "_lastExecutionId": "703580d1-0f6c-4ee0-8b52-f08744d5f4a9"
                  }
                }
              ]
            },
            {
              "id": "a5b21d99-d907-46af-9aeb-b473df60209d",
              "name": "Delete Reserva",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    "{{ID}}"
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "disabled": true,
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Cookie",
                    "value": "token={{token}}"
                  }
                ],
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "230fabf5-9bce-4a2b-b306-aad03eec7750",
                    "type": "text/javascript",
                    "exec": [
                      "let getTokenRequest = {\r",
                      "    method: 'POST',\r",
                      "    url:'https://restful-booker.herokuapp.com/auth',\r",
                      "    body:{\r",
                      "        mode: 'urlencoded',\r",
                      "        urlencoded:[\r",
                      "            {key: 'username', value: 'admin'},\r",
                      "            {key: 'password', value: 'password123'}\r",
                      "        ]\r",
                      "    }\r",
                      "};\r",
                      "console.log(\"Funcion: \",getTokenRequest)\r",
                      "\r",
                      "\r",
                      "pm.sendRequest(getTokenRequest,(err, response) =>\r",
                      "{\r",
                      "    console.log(\"Respuesta:\", response )\r",
                      "    var jsonResponse = response.json(),\r",
                      "    newToken = jsonResponse.token\r",
                      "\r",
                      "    pm.environment.set('token', newToken)\r",
                      "    console.log(\"token: \", newToken)\r",
                      "}\r",
                      ");\r",
                      "\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "dd3fb4ff-db14-4537-8a39-4cc22047c8ca"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "d0a70023-e784-4e1e-afe9-ec3af607bd87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 201\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(201)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})"
                    ],
                    "_lastExecutionId": "82d62202-81ce-4bb6-9d8e-c81c81ad7b67"
                  }
                }
              ]
            },
            {
              "id": "e21b5fa7-7131-4053-a8e5-0211144d6a7b",
              "name": "Busqueda X Nombre",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "key": "last_name",
                      "value": "Targaryen"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5e46723b-0620-4737-889d-2425d38e1ac5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "c45b69f9-97a3-4934-bb86-ca4509fa6ea4"
                  }
                }
              ]
            },
            {
              "id": "8abbdaae-d824-4edc-84d1-2a2514dc366e",
              "name": "Busqueda De Reservas X Fecha",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "booking",
                    ""
                  ],
                  "host": [
                    "{{url_base}}"
                  ],
                  "query": [
                    {
                      "disabled": true,
                      "key": "firs_tname",
                      "value": "Daenerys"
                    },
                    {
                      "disabled": true,
                      "key": "last_name",
                      "value": "Targaryen"
                    },
                    {
                      "key": "checkin",
                      "value": "2020-01-01"
                    },
                    {
                      "key": "checkout",
                      "value": "2020-01-05"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Validar Estatus 200\", function() {\r",
                      "    pm.expect(pm.response.code).to.equal(200)\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Tiempo de Respuesta Menor a 500ms\", function() {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "})\r",
                      "\r",
                      "pm.test(\"Validar Header: Content-Type\", function() {\r",
                      "    pm.response.to.have.header(\"Content-Type\")\r",
                      "});"
                    ],
                    "_lastExecutionId": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
                  }
                }
              ]
            }
          ],
          "event": [],
          "protocolProfileBehavior": {},
          "variable": [],
          "info": {
            "_postman_id": "75a706e6-f361-46b6-b67c-4a52253b2bcb",
            "name": "Practica3",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
          }
        },
        "cursor": {
          "ref": "b7929038-a57e-4430-8781-378df92068a8",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5bb2b176-028a-4f4f-bb0e-fdea9fce1f6c",
          "scriptId": "c4f22238-989a-430a-9ea3-1b8a8aebe8d9",
          "execution": "dfc83707-12e5-4c12-889c-58707ce1f8a3"
        }
      }
    ],
    "error": null
  }
}